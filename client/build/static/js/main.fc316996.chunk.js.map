{"version":3,"sources":["component/NavBar/NavBar.jsx","component/Users/Signup/CreateCompany.jsx","component/Users/Signup/index.js","component/Users/Login/index.js","component/Styles/CardContainers.jsx","component/Styles/navStyles.jsx","component/LandingPage/LandingPage.jsx","component/LandingPage/index.js","component/Home/HackerNews/Post.jsx","component/Styles/FormStyles.jsx","component/Home/HackerNews/index.js","component/Home/TechNews/Story.jsx","component/Home/TechNews/index.js","component/Home/BootcampHome.jsx","component/Home/AdminHome.jsx","component/Home/CompanyHome.jsx","component/Home/index.js","component/Jobs/CompanyJobs.jsx","component/Jobs/JobBoard.jsx","component/Jobs/BootcampJobs.jsx","component/Jobs/index.js","component/BootcampProfile/BootcampProfile.jsx","component/BootcampProfile/index.js","component/CompanyProfile/CompanyProfile.jsx","component/CompanyProfile/index.js","component/Applications/BootcampViewApplications.jsx","component/Applications/CompanyApplications.jsx","component/Applications/index.js","component/Resources/EditResourceModal.jsx","component/Resources/BootcampResourceCard.jsx","component/Resources/BootcampResourceGet.jsx","component/Resources/index.js","component/Resources/ResourcePost.jsx","component/Jobs/JobPost.jsx","component/Jobs/CreateJobPost.jsx","component/Styles/messageStyles.jsx","component/messages/index.js","component/Resources/BootcampResourcePost.jsx","component/Home/admin/reportFunctions.js","component/Home/admin/reports.jsx","component/PostReports/index.js","App.js","reducers/loginReducer.js","reducers/rootReducer.js","index.js"],"names":["NavBar","user","useSelector","state","handleLogout","e","a","async","theStore","dispatch","type","window","location","replace","onClickNav","setIsActive","isActive","useState","style","borderBottom","margin","backgroundColor","to","onClick","user_types_id","auth","id","companies_id","CreateCompany","props","email","name","setState","handleChange","target","value","isSubmitted","placeholder","onChange","preventDefault","payload","Axios","post","getCompanyInfo","SignupForm","password","first_name","last_name","github_url","linkedin_url","user_type","bootcamp_name","company_id","newUser","setNewUser","companyInfo","setCompanyInfo","get","response","data","useEffect","history","useHistory","handleInputChange","maxWidth","marginTop","onSubmit","console","log","alert","reload","textAlign","aria-label","isSize","required","map","company","connect","login","setLogin","updateUser","width","push","className","padding","styled","div","ul","li","CenteredContainer","CardContainer","NavLink","button","Anchor","LandingPage","fontSize","Landing","Post","postData","setPostData","getAnItem","dateToFormat","time","href","url","rel","title","fromNow","unix","score","by","form","label","input","Title","h1","textarea","Wrapper","Index","topIds","setTopIds","allIds","slice","getTopStoriesIds","length","key","Story","story","description","topStories","setTopStories","process","articles","getTopTechStories","i","BootcampHome","HackerNews","TechNews","AdminHome","users","setUsers","companies","setCompanies","jobs","setJobs","resources","setResources","ENDPOINT","axios","status","getUsersReports","getCompaniesReports","getJobsReports","getResourcesReports","AdminWrapper","overflowY","report","format","date_reported","isColor","getJobsByCompany","companyId","getMessages","userId","CompanyHome","postUsers","setPostUsers","messages","setMessages","then","display","flexDirection","alignItems","height","index","arr","date_applied","rejected","accepted","message","date_sent","subject","Home","JobCard","companyData","setCompanyData","endpoint","res","fetchCompanyData","date_posted","experience","contact_email","JobCardWrapper","CompanyJobs","activeJobs","filter","job","is_active","fetchJobsData","color","users_id","JobBoard","BootcampJobs","Jobs","UserProfile","skillsArray","setSkillsArray","isEditMode","setEditMode","personal_website","about","skills","profile_pic_url","userInfo","setUserInfo","useParams","getUserInfo","split","put","src","Object","values","skill","BootcampProfile","CompanyProfile","company_url","company_logo_url","updateCompany","alt","ApplicationCardWrapper","BootcampViewApplications","userApplications","setUserApplications","getUserApplications","application","posts_jobs_id","FormWrapper","getApplicantsByJobId","jobsId","ApplicantsData","applicants","setApplicants","showMessage","setShowMessage","showApplicants","setShowApplicants","messageApplicant","setMessageApplicant","sent_from","sent_to","sent_from_companies_id","sendMessage","setSendMessage","jobId","applicantid","applicant","justifyContent","showMessageForm","applicantId","handleRejection","jobid","disabled","isGrouped","CompanyApplications","setJobId","getJobPostsByCompanyId","String","alignSelf","ApplicantCardWrapper","Applications","EditResourceModal","editFormActive","setEditFormActive","resource","fetchResourcesData","short_description","full_description","resource_url","resourceEdited","editState","setEditState","handleEdit","resourceId","rows","cols","BootcampResourceCard","resourceURL","cardResource","datePosted","usersId","firstName","lastName","githubLink","linkedinLink","descriptionShort","descriptionFull","editResource","deleteResource","resourceCardStyles","hasTextAlign","isAlign","BackButton","ResourceWrapper","BootcampResourceGet","resourcesFetched","setResourcesFetched","confirmAlert","buttons","isOutlined","Resources","Component","resourcesEndpoint","ResourcePost","match","params","resource_id","linkin_url","marginBottom","JobPost","job_title","phone","editJobState","setEditJobState","job_id","content","contact_phone","catch","err","CreateJobPost","contact_name","Main","Message","getSentMessages","Messages","user_id","sentMessages","setSentMessages","singleMessage","setMessage","showSent","setShowSent","showInbox","setShowInbox","showMessageAndReplyForm","message_id","postReport","overflowX","position","marginLeft","left","BootcampResourcePost","resourceSubmitted","setTimeout","getReports","getResolvedReports","getUsersResolvedReports","getCompaniesResolvedReports","getJobsResolvedReports","getResourcesResolvedReports","Reports","allReports","setAllReports","allResolvedReports","setAllResolvedReports","usersResolved","setUsersResolved","companiesResolved","setCompaniesResolved","jobsResolved","setJobsResolved","resourcesResolved","setResourcesResolved","singleReport","setReport","messageData","setMessageData","sendCompanyMessage","setSendCompanyMessage","showResolved","setShowResolved","showUnResolved","setShowUnResolved","showAll","setShowAll","showUserReports","setShowUserReports","showCompanyReports","setShowCompanyReports","showJobReports","setShowJobReports","showResourceReports","setShowResourceReports","showReport","setShowReport","showCompanyMessage","setShowCompanyMessage","changeStatus","show","reports","handleReportClick","getTheReport","handleUserMessageForm","handleMessageChange","handleCompanyMessageChange","hasIcons","defaultValue","fontWeight","jobtitle","resolved","reason","flexWrap","handleBanUserClick","submited_by","PostReports","posts_job_id","send","App","path","component","exact","Signup","Login","AdminReports","initialState","userReducer","action","rootReducer","combineReducers","middleWare","reduxPromise","reduxThunk","applyMiddleware","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.fc316996.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { theStore } from \"../../index\";\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarItem,\n  NavbarBurger,\n  NavbarMenu,\n  NavbarEnd\n} from \"bloomer\";\n\n\nconst NavBar = () => {\n  const user = useSelector(state => state.user);\n\n\n  const handleLogout = async e => {\n    theStore.dispatch({\n      type: \"user logged out\"\n    });\n    window.location.replace(\"/\");\n  };\n\n  const onClickNav = () => setIsActive(!isActive);\n  const [isActive, setIsActive] = useState(false);\n\n  return (\n    <Navbar\n      style={{\n        borderBottom: \"solid 0.01rem grey\",\n        margin: \"0\",\n        backgroundColor: \"#88BBD6\"\n      }}\n    >\n      <NavbarBrand>\n        <NavbarItem>\n          <NavLink to=\"/home\">CodeTrain</NavLink>\n        </NavbarItem>\n        <NavbarItem>\n          <NavLink to=\"/resources\">Resources</NavLink>\n        </NavbarItem>\n        <NavbarBurger isActive={isActive} onClick={onClickNav} />\n      </NavbarBrand>\n      <NavbarMenu isActive={isActive} onClick={onClickNav}>\n        <NavbarEnd>\n          {/* Below items only render for Admins */}\n          {user.user_types_id === 1 && user.auth === true ? (\n            <>\n              <NavbarItem>\n                <NavLink to=\"/home\">Home</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <NavLink to=\"/admin/reports\">Reports</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <NavLink to=\"/jobs\">Jobs</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <NavLink to=\"/messages\">Messages</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <Link to=\"\" onClick={handleLogout}>\n                  Logout\n                </Link>\n              </NavbarItem>\n            </>\n          ) : // Below items only render for Bootcamp Users\n          user.user_types_id === 2 && user.auth === true ? (\n            <>\n              <NavbarItem>\n                <NavLink to=\"/home\">Home</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <NavLink to={`/user/${user.id}`}>Profile</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <NavLink to=\"/jobs\">Jobs</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <NavLink to=\"/applications\">Applications</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <NavLink to=\"/messages\">Messages</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <Link to=\"\" onClick={handleLogout}>\n                  Logout\n                </Link>\n              </NavbarItem>\n            </>\n          ) : user.user_types_id === 3 && user.auth === true ? (\n            // Company User NavBar\n            <>\n              <NavbarItem>\n                <NavLink to=\"/home\">Home</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <NavLink to={`/company/${user.companies_id}`}>Company</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <NavLink to=\"/jobs\">Jobs</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <NavLink to=\"/applications\">Applicants</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <NavLink to=\"/messages\">Messages</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <Link to=\"\" onClick={handleLogout}>\n                  Logout\n                </Link>\n              </NavbarItem>\n            </>\n          ) : (user.user_types_id === 2 || user.user_types_id === 3) &&\n            user.auth === false ? (\n            // Not Auth User\n            <>\n              <NavbarItem>\n                <NavLink to=\"/home\">Home</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <NavLink to=\"/profile\">Profile</NavLink>\n              </NavbarItem>\n              <NavbarItem>\n                <Link to=\"\" onClick={handleLogout}>\n                  Logout\n                </Link>\n              </NavbarItem>\n            </>\n          ) : (\n            <>\n              <NavbarItem>\n                <Link to=\"/signup\">Sign up</Link>\n              </NavbarItem>\n              <NavbarItem>\n                <Link to=\"/login\">Log in</Link>\n              </NavbarItem>\n            </>\n          )}\n        </NavbarEnd>\n      </NavbarMenu>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React, { useState } from \"react\";\n\nimport {\n\n  Input,\n  Field,\n  Label,\n  Button\n} from \"bloomer\";\nimport Axios from \"axios\";\n\nconst CreateCompany = props => {\n  const [state, setState] = useState({\n    email: \"\",\n    name: \"\"\n  });\n\n  // prevents the use of writing several handleChange functions by deconstructing name and value from the onchange event\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const endpoint = \"http://localhost:3000/companies/add\";\n\n    const payload = {\n      email: state.email,\n      name: state.name\n    };\n\n    await Axios.post(endpoint, payload);\n    // alert(\"Your company was added\");\n    setState({ ...state, isSubmitted: true });\n\n    props.getCompanyInfo();\n  };\n\n  return (\n    <>\n      {state.isSubmitted ? (\n        <p>Your company was added</p>\n      ) : (\n        <form>\n          <Field>\n            \n          <Label>\n            Company Email\n            <Input\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              value={state.email}\n              onChange={handleChange}\n              />\n          </Label>\n              </Field>\n              <Field>\n\n          <Label>\n            Company Name\n            <Input\n              placeholder=\"Name\"\n              name=\"name\"\n              value={state.name}\n              onChange={handleChange}\n              />\n          </Label>\n              </Field>\n          <Button onClick={handleSubmit}>Add Company</Button>\n        </form>\n      )}\n    </>\n  );\n};\n\nexport default CreateCompany;\n","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport CreateCompany from \"./CreateCompany\";\n\nimport {\n  Box,\n  Select,\n  Input,\n  Field,\n  Label,\n  Title,\n  Button\n} from \"bloomer\";\n\nconst SignupForm = () => {\n  const endpoint = \"http://localhost:3000\";\n  // const endpoint = \"http://192.168.0.123:3000\";\n  const [newUser, setNewUser] = useState({\n    email: \"\",\n    password: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    github_url: \"https://\",\n    linkedin_url: \"https://\",\n    user_type: null,\n    bootcamp_name: null,\n    company_id: null\n  });\n\n  const [companyInfo, setCompanyInfo] = useState([]);\n\n  const getCompanyInfo = async () => {\n    const response = await Axios.get(`http://localhost:3000/companies`);\n    setCompanyInfo(response.data);\n  };\n\n  useEffect(() => {\n    getCompanyInfo();\n  }, []);\n\n  const addInput = () => {\n    if (newUser.user_type === \"2\") {\n      return (\n        <Field>\n          <Label>\n            Bootcamp Name\n            <Input\n              type=\"text\"\n              placeholder=\"Name of Bootcamp\"\n              onChange={handleInputChange}\n              name=\"bootcamp_name\"\n              aria-label=\"Bootcamp Name\"\n              required\n            />\n          </Label>\n        </Field>\n      );\n    }\n    if (newUser.user_type === \"3\") {\n      return (\n        <Field>\n          <Label>\n            Company Name\n            <br />\n            <Select onChange={handleInputChange} name=\"company_id\">\n              <option>Select a company</option>\n              {companyInfo.map(company => {\n                return (\n                  <option name=\"company_id\" value={company.id}>\n                    {company.name}\n                  </option>\n                );\n              })}\n            </Select>\n          </Label>\n          <Label>\n            Is your company not listed? Add it here.\n            {/* <Input\n              type=\"text\"\n              placeholder=\"Name of Company\"\n              onChange={handleInputChange}\n              name=\"company_name\"\n              aria-label=\"Company Name\"\n              // required\n            /> */}\n            <CreateCompany getCompanyInfo={getCompanyInfo} />\n          </Label>\n        </Field>\n      );\n    }\n  };\n  const history = useHistory();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await Axios.post(`${endpoint}/signup`, newUser);\n      console.log(response);\n      alert(\"Successfully signed up, please log in\");\n      history.replace(\"/login\");\n    } catch {\n      window.alert(\n        \"Sorry, There Was An Error With Signing up, Please Try Again\"\n      );\n      window.location.reload();\n    }\n  };\n\n  const handleInputChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    setNewUser({ ...newUser, [name]: value });\n  };\n\n  return (\n    <Box style={{ margin: \"0 auto\", maxWidth: '60vw', marginTop: 40 }}>\n      <form onSubmit={handleSubmit}>\n        <Title style={{ textAlign: \"center\" }}>Create an Account</Title>\n        <Field>\n          <Label>\n            Email Address\n            <Input\n              type=\"email\"\n              placeholder=\"Email Address\"\n              onChange={handleInputChange}\n              name=\"email\"\n              aria-label=\"Email Address\"\n            />\n          </Label>\n        </Field>\n        <Field>\n          <Label>\n            Password\n            <Input\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={handleInputChange}\n              name=\"password\"\n              aria-label=\"Password\"\n            />\n          </Label>\n        </Field>\n        <Field>\n          <Label>\n            First Name\n            <Input\n              type=\"text\"\n              placeholder=\"Enter First Name\"\n              onChange={handleInputChange}\n              name=\"first_name\"\n              aria-label=\"First Name\"\n            />\n          </Label>\n        </Field>\n        <Field>\n          <Label>\n            Last Name\n            <Input\n              type=\"text\"\n              placeholder=\"Enter Last Name\"\n              onChange={handleInputChange}\n              name=\"last_name\"\n              aria-label=\"Last Name\"\n            />\n          </Label>\n        </Field>\n        <Field>\n          <Label>\n            Github Profile\n            <Input\n              type=\"url\"\n              placeholder=\"Link to your Github Profile\"\n              onChange={handleInputChange}\n              name=\"github_url\"\n              value={newUser.github_url}\n              aria-label=\"Github URL\"\n            />\n          </Label>\n        </Field>\n        <Field>\n          <Label>\n            LinkedIn Profile\n            <Input\n              type=\"url\"\n              placeholder=\"Link to your LinkedIn Profile\"\n              onChange={handleInputChange}\n              name=\"linkedin_url\"\n              value={newUser.linkedin_url}\n              aria-label=\"Linkedin URL\"\n            />\n          </Label>\n        </Field>\n\n        <Title isSize={5}>Are you part of a Bootcamp or a Company?</Title>\n        <Field>\n          <Label>\n            <input\n              type=\"radio\"\n              value=\"2\"\n              onChange={handleInputChange}\n              name=\"user_type\"\n              aria-label=\"Bootcamp\"\n            /> \n            Bootcamp\n          </Label>\n        </Field>\n        <Field>\n          <Label>\n            <input\n              type=\"radio\"\n              value=\"3\"\n              onChange={handleInputChange}\n              name=\"user_type\"\n              aria-label=\"Bootcamp\"\n            />\n            Company\n          </Label>\n        </Field>\n        {addInput()}\n\n        <Button type=\"submit\">Create Your Account</Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default SignupForm;\n","import React, { useState } from \"react\";\nimport { theStore } from \"../../../index\";\nimport Axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Input, Field, Label, Title, Button } from \"bloomer\";\n\nconst LoginForm = props => {\n  const endpoint = \"http://localhost:3000\";\n  // const endpoint = \"http://192.168.0.123:3000\";\n  let history = useHistory();\n\n  const [login, setLogin] = useState({ email: \"\", password: \"\" });\n\n  const updateUser = data => {\n    theStore.dispatch({\n      type: \"user logged in\",\n      payload: data\n    });\n  };\n\n  const handleSubmit = async (e, props) => {\n    e.preventDefault();\n    try {\n      const response = await Axios.post(`${endpoint}/login`, login);\n      console.log(response);\n      const data = await response.data.user;\n      await updateUser(data);\n      if (response.data.user.user_types_id === 1) {\n        history.push(\"/admin/reports\");\n      } else {\n        history.push(\"/home\");\n      }\n    } catch {\n      window.alert(\n        \"Sorry, There Was An Error While Logging In, Please Try Again\"\n      );\n      window.location.reload();\n    }\n  };\n\n  const handleInputChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    setLogin({ ...login, [name]: value });\n  };\n\n  return (\n    <Box style={{ margin: \" 10% auto\", width: \"75%\" }}>\n      <form\n        onSubmit={handleSubmit}\n        className=\"form-signin\"\n        style={{ padding: \"64px\" }}\n      >\n        <Title style={{ textAlign: \"center\" }}>Sign In</Title>\n        <Field>\n          <Label>\n            Email Address:\n            <Input\n              className=\"form-control\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email Address\"\n              aria-label=\"Email Input Field\"\n              onChange={handleInputChange}\n            />\n          </Label>\n        </Field>\n        <Field>\n          <Label>\n            Password:\n            <Input\n              className=\"form-control\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              aria-label=\"Password Input Field\"\n              onChange={handleInputChange}\n            />\n          </Label>\n        </Field>\n        <Button type=\"submit\">LOGIN</Button>\n      </form>\n    </Box>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    ...state.user\n  };\n}\n\nexport default connect(mapStateToProps)(LoginForm);\n","import styled from \"styled-components\";\n\nexport const MainContainer = styled.div`\n  display: flex;\n`;\n\nexport const SmallCard = styled.div`\n  border: 2px solid black;\n  margin: 1rem;\n  padding: 8px;\n`;\n\nexport const MappedList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin: 16px;\n`;\nexport const MappedItem = styled.li`\n  margin: 4px;\n`;\n\nexport const CenteredContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-items: center;\n  justify-content: center;\n  margin: 10vh 20vw;\n  max-width: 800px;\n`;\n\nexport const CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-items: center;\n  justify-content: center;\n  margin: 10vh 10vw;\n  // max-width: ;\n`;\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Nav = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 1625px;\n  padding: 16px 0;\n  background-color: grey;\n`;\n\nexport const Ul = styled.div`\n  display: flex;\n  list-style-type: none;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px;\n  font-weight: 500;\n  background-color: lightblue;\n  font-size: 150%;\n  width: fit-content;\n  margin-right: 16px;\n  border-radius: 8px;\n  box-shadow: 2px 2px 3px 3px rgba(0, 0, 0, 0.2),\n    2px 4px 3px 3px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  padding: 8px;\n  font-weight: 500;\n  background-color: lightblue;\n  font-size: 150%;\n  width: fit-content;\n  margin-right: 16px;\n  border-radius: 8px;\n  box-shadow: 2px 2px 3px 3px rgba(0, 0, 0, 0.2),\n    2px 4px 3px 3px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n`;\n\nexport const Anchor = styled.a`\n  color: blue;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CenteredContainer } from \"../Styles/CardContainers\";\nimport { Content } from \"bloomer\";\nimport { Anchor } from \"../Styles/navStyles\";\n\nconst LandingPage = () => {\n  return (\n    <CenteredContainer>\n      <Content style={{fontSize: '1.35rem'}}>\n        <h1>\n          <strong>Welcome to CodeTrain</strong>\n        </h1>\n        <p>\n          A community of coding bootcamp students and employers looking to hire\n          new developers. Bootcamper students can share learning resources with\n          each other and apply to jobs posted here. Company representatives can\n          list their job opprtunities here and connect with bootcampers.\n        </p>\n        <br />\n        <Link to=\"/resources\">\n          <Anchor>Browse learning resources posted by our community</Anchor>\n        </Link>\n        <br />\n        <p>\n          Do you attend a coding bootcamp? Are you a company looking to hire new\n          developers?\n        </p>\n        <Link to=\"/signup\">\n          <Anchor>Sign Up Here</Anchor>\n        </Link>\n        <p>\n          Already a user?{\" \"}\n          <Link to=\"/login\">\n            <Anchor>Login here</Anchor>\n          </Link>\n        </p>\n      </Content>\n    </CenteredContainer>\n  );\n};\n\nexport default LandingPage;\n","import React from \"react\";\n\nimport LandingPage from \"./LandingPage\";\n\nexport default function Landing() {\n  return (\n    <div>\n      <LandingPage />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Moment from \"react-moment\";\nimport Axios from \"axios\";\nimport {Box} from 'bloomer';\n\nconst Post = props => {\n  const [postData, setPostData] = useState({});\n\n  const getAnItem = async id => {\n    const response = await Axios.get(\n      `https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`\n    );\n    const postData = response.data;\n    setPostData(postData);\n  };\n\n  useEffect(() => {\n    getAnItem(props.id);\n  }, [props.id]);\n\n  const dateToFormat = postData.time;\n\n  return (\n    <Box style={{margin: \"1rem\"}}>\n      <p>\n         <a href={postData.url} target=\"_blank\" rel=\"noopener noreferrer\">{postData.title}</a> \n      </p>\n      <p>\n        Posted {\" \"}\n        <Moment fromNow unix>\n          {dateToFormat}\n        </Moment>\n      </p>\n      <p>\n        {postData.score} points on HackerNews by {postData.by}\n      </p>\n    </Box>\n  );\n};\n\nexport default Post;\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  border: solid;\n  padding: 32px;\n  margin: 16px;\n  box-shadow: 5px 10px 5px lightgrey;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px;\n  font-weight: 600;\n  font-size: 200%;\n`;\n\nexport const Input = styled.input`\n  margin: 8px;\n  padding: 8px;\n  font-size: 100%;\n`;\n\nexport const Button = styled.button`\n  padding: 8px;\n  font-weight: 500;\n  background-color: lightblue;\n  font-size: 150%;\n  margin: 16px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 300%;\n  letter-spacing: ;\n`;\n\nexport const TextArea = styled.textarea`\n  font-size: 100%;\n  height: 500px;\n  padding: 16px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport Post from \"./Post\";\nimport Axios from \"axios\";\nimport styled from 'styled-components'\nimport {Title} from '../../Styles/FormStyles'\n\nconst Index = () => {\n  const [topIds, setTopIds] = useState([]);\n\n  const getTopStoriesIds = async () => {\n    const response = await Axios.get(\n      \"https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty\"\n    );\n    const allIds = response.data;\n    const topIds = allIds.slice(0, 25);\n    setTopIds(topIds);\n  };\n\n  useEffect(() => {\n    getTopStoriesIds();\n  }, []);\n\n  return (\n    <Wrapper>\n      <Title>HackerNews Top Stories</Title>\n      { topIds.length > 1 ? <ul>\n        {topIds.map(id => {\n          return (\n            <li key={id}>\n              <Post id={id} />\n            </li>\n          );\n        })}\n      </ul> : <p>Loading...</p>}\n      \n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 40%;\n  overflow-y: auto;\n  height: 92vh;\n`\n\nexport default Index;\n","import React from \"react\";\nimport {Box} from 'bloomer';\n\nconst Story = props => {\n  const story = props.data;\n\n  return (\n    <Box style={{margin: \"1rem\"}}>\n      <a href={story.url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <p>{story.title}</p>\n      </a>\n      <p>{story.description}</p>\n    </Box>\n  );\n};\n\nexport default Story;\n","import React, { useState, useEffect } from \"react\";\nimport Story from \"./Story\";\nimport Axios from \"axios\";\nimport styled from \"styled-components\";\nimport { Title } from \"../../Styles/FormStyles\";\n\nconst Index = () => {\n  const [topStories, setTopStories] = useState([]);\n  \n  useEffect(() => {\n    const API_KEY = process.env.REACT_APP_NEWS_API_KEY;\n    const getTopTechStories = async () => {\n      const response = await Axios.get(\n        `https://newsapi.org/v2/top-headlines?apiKey=${API_KEY}&sources=techcrunch`\n      );\n      const topStories = response.data.articles;\n      setTopStories(topStories);\n    };\n    getTopTechStories();\n  }, []);\n\n  return (\n    <Wrapper>\n      <Title>TechCrunch Top Stories</Title>\n      { topStories.length > 1 ? <ul>\n        {topStories.map((story, i) => (\n          <li key={i}>\n            <Story data={story} />\n          </li>\n        ))}\n      </ul> : <p>Loading...</p>}\n      \n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 40%;\n  overflow-y: auto;\n  height: 92vh;\n`;\nexport default Index;\n","import React from \"react\";\nimport HackerNews from \"./HackerNews\";\nimport TechNews from \"./TechNews\";\nimport styled from \"styled-components\";\n\nconst BootcampHome = () => (\n  <>\n    <Wrapper>\n      <HackerNews />\n      <TechNews />\n    </Wrapper>\n  </>\n);\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport default BootcampHome;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport Moment from \"react-moment\";\nimport {\n  Card,\n  CardHeader,\n  CardHeaderTitle,\n  CardContent,\n  Content,\n  Title,\n  Breadcrumb,\n  BreadcrumbItem,\n  Subtitle,\n  Button\n} from \"bloomer\";\n\nexport default function AdminHome() {\n  const user = useSelector(state => state.user);\n\n  if (user.user_types_id !== 1) {\n    window.location.replace(\"/\");\n  }\n\n  const [users, setUsers] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [resources, setResources] = useState([]);\n\n  const ENDPOINT = \"localhost:3000\";\n\n  const getUsersReports = async () => {\n    const response = await axios.get(`http://${ENDPOINT}/reports/all/users`);\n    const data = response.data;\n    if (response.status === 200) {\n      setUsers(data);\n    } else {\n      alert(\"Sorry, there was an error\");\n    }\n  };\n\n  const getCompaniesReports = async () => {\n    const response = await axios.get(\n      `http://${ENDPOINT}/reports/all/companies`\n    );\n    const data = response.data;\n    if (response.status === 200) {\n      setCompanies(data);\n    } else {\n      alert(\"Sorry, there was an error\");\n    }\n  };\n\n  const getJobsReports = async () => {\n    const response = await axios.get(`http://${ENDPOINT}/reports/all/jobs`);\n    const data = response.data;\n    if (response.status === 200) {\n      setJobs(data);\n    } else {\n      alert(\"Sorry, there was an error\");\n    }\n  };\n\n  const getResourcesReports = async () => {\n    const response = await axios.get(\n      `http://${ENDPOINT}/reports/all/resources`\n    );\n    const data = response.data;\n    if (response.status === 200) {\n      setResources(data);\n    } else {\n      alert(\"Sorry, there was an error\");\n    }\n  };\n\n  useEffect(() => {\n    getUsersReports();\n    getCompaniesReports();\n    getJobsReports();\n    getResourcesReports();\n  }, []);\n\n  return (\n    <AdminWrapper>\n      <Card style={{overflowY:\"scroll\"}}>\n        <CardHeader>\n          <CardHeaderTitle>Users Reports</CardHeaderTitle>\n        </CardHeader>\n        <CardContent>\n          <Content>\n          {(users.length < 1) ? <h4>No Reports</h4> :\n            users.map(report => {\n              return (\n                <div key={report.id}>\n                  <Subtitle isSize={6} style={{margin: 0}}>Report # {report.id}</Subtitle>\n                  <Title isSize={6} style={{margin: 0}}>\n                    Reported By: {report.first_name} {report.last_name}\n                  </Title>\n                  <Breadcrumb isSize={`small`} style={{margin: 0}}>\n                    <BreadcrumbItem>\n                      Reported:\n                      <Moment format=\"YYYY-MM-DD\">\n                        {report.date_reported}\n                      </Moment>\n                    </BreadcrumbItem>\n                  </Breadcrumb>\n                  <Button isColor=\"primary\">View Report</Button>\n                <hr />\n                </div>\n              );\n            })}\n          </Content>\n        </CardContent>\n      </Card>\n\n      <Card style={{overflowY:\"scroll\"}}>\n        <CardHeader>\n          <CardHeaderTitle>Companies Reports</CardHeaderTitle>\n        </CardHeader>\n        <CardContent>\n          <Content>\n          {(companies.length < 1) ? <h4>No Reports</h4> :\n            companies.map((report, i) => {\n              return (\n                <div key={report.id}>\n                  <Subtitle isSize={6} style={{margin: 0}}>Report # {report.id}</Subtitle>\n                  <Title isSize={6} style={{margin: 0}}>\n                    Company: {report.name}\n                    Reported By: {report.first_name} {report.last_name}\n                  </Title>\n                  <Breadcrumb isSize={`small`} style={{margin: 0}}>\n                    <BreadcrumbItem>\n                      Reported:\n                      <Moment format=\"YYYY-MM-DD\">\n                        {report.date_reported}\n                      </Moment>\n                    </BreadcrumbItem>\n                  </Breadcrumb>\n                  <button>View Report</button>\n                <hr />\n                </div>\n              );\n            })}\n          </Content>\n        </CardContent>\n      </Card>\n\n      <Card style={{overflowY:\"scroll\"}}>\n        <CardHeader>\n          <CardHeaderTitle >Jobs Reports</CardHeaderTitle>\n        </CardHeader>\n        <CardContent>\n          <Content>\n          {(jobs.length < 1) ? <h4>No Reports</h4> :\n            jobs.map(report => {\n              return (\n                <div key={report.id}>\n                  <Subtitle isSize={6} style={{margin: 0}}>Report # {report.id}</Subtitle>\n                  <Title isSize={6} style={{margin: 0}}>\n                    Reported By: {report.first_name} {report.last_name}\n                  </Title>\n                    <Title isSize={6} style={{margin: 0}}>Job Post: {report.title}</Title>\n                    <p style={{margin: 0}}>Posted by: {report.first_name} {report.last_name}</p>\n                  <Breadcrumb isSize={`small`} style={{margin: 0}}>\n                    <BreadcrumbItem>\n                      Reported:\n                      <Moment format=\"YYYY-MM-DD\">\n                        {report.date_reported}\n                      </Moment>\n                    </BreadcrumbItem>\n                  </Breadcrumb>\n                  <Button isColor=\"primary\">View Report</Button>\n                <hr />\n                </div>\n              );\n            })}\n          </Content>\n        </CardContent>\n      </Card>\n\n      <Card style={{overflowY:\"scroll\"}}>\n        <CardHeader>\n          <CardHeaderTitle>Resources Reports</CardHeaderTitle>\n        </CardHeader>\n        <CardContent>\n          <Content>\n            {(resources.length < 1) ? <h4>No Reports</h4> :\n            resources.map(report => {\n              return (\n                <div key={report.id}>\n                  <Subtitle isSize={6} style={{margin: 0}}>Report # {report.id}</Subtitle>\n                  <Title isSize={6} style={{margin: 0}}>\n                  </Title>\n                    Name: {report.first_name} {report.last_name}\n                    Resource Post: Title: {report.title}\n                  <Breadcrumb isSize={`small`} style={{margin: 0}}>\n                    <BreadcrumbItem>\n                      Reported:\n                      <Moment format=\"YYYY-MM-DD\">\n                        {report.date_reported}\n                      </Moment>\n                    </BreadcrumbItem>\n                  </Breadcrumb>\n                  <Button isColor=\"primary\">View Report</Button>\n                <hr />\n                </div>\n              );\n            })} \n            \n          </Content>\n        </CardContent>\n      </Card>\n    </AdminWrapper>\n  );\n}\n\nconst AdminWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport axios from \"axios\";\nimport {useHistory} from 'react-router-dom'\n\nimport { Button, Box, Title, Container, Card } from \"bloomer\";\n\nconst endpoint = \"http://localhost:3000\";\n\nconst getJobsByCompany = async (companyId) => {\n  const response = await axios.get(\n    `${endpoint}/job-applications/users/${companyId}`\n  );\n  if(response.status === 200){\n    const data = response.data;\n    return data\n  }else {\n    console.log(\"There was an Error Returning Data\")\n  }\n};\n\nconst getMessages = async (userId) => {\n  const response = await axios.get(\n    `${endpoint}/messages/all/${userId}`\n  );\n  if(response.status === 200){\n    const data = response.data;\n    return data\n  }else {\n    console.log(\"There was an Error Returning Data\")\n  }\n}\n\nexport default function CompanyHome() {\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n  \n  const [postUsers, setPostUsers] = useState([]);\n  const [messages, setMessages] = useState([])\n\n  \n\n  useEffect(() => {\n    getJobsByCompany(user.companies_id).then(data => setPostUsers(data));\n  },[user.companies_id]);\n\n  useEffect(()=> {\n    getMessages(user.id).then(data => setMessages(data));\n  },[user.id]);\n\n  return (\n    <Container style={{display: \"flex\", width: \"100%\"}}>\n    <Card style={{margin: \"32px\", width: \"50%\"}}>\n      <Box style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n        <Title>Recent Applicants</Title>\n        <Button isColor=\"primary\" onClick={()=> history.push('/jobs')}>View All Job Posts</Button>\n        </Box>\n        <Box style={{overflowY: \"scroll\", height: \"75vh\"}}>\n        {postUsers.map((post, index, arr) => {\n          return (\n            <Box style={{height: \"200px\"}} key={index}>\n                  <>\n                  <Title isSize={5}>JOB #: {post.id}</Title>\n                  <p><strong>JOB TITLE:</strong> {post.title}</p>\n                  <p>\n                  <strong>Applicant Name:</strong> {post.first_name} {post.last_name}\n                  </p>\n                  <p><strong>Date Applied:</strong> <Moment format=\"YYYY-MM-DD\">{post.date_applied}</Moment></p>\n                  <p><strong>Status:</strong> {(!post.rejected && !post.accepted) ? '<pending>' : (post.rejected) ? 'rejected' : (post.accepted) ? 'approved' : ''}</p>\n                </>\n            </Box>\n          );\n        })}\n        </Box>\n      </Card>\n      <Card style={{margin: \"32px\", width: \"50%\"}}>\n      <Box style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n        <Title>Messages</Title>\n        <Button isColor=\"primary\" onClick={() => history.push(`/messages`)}>View All Messages</Button>\n        </Box>\n        <Box style={{overflowY: \"scroll\", height: \"75vh\"}}>\n        {messages.map((message, index) => {\n          return(\n            <Box style={{display: \"flex\", flexDirection: \"column\", height: \"200px\"}} key={index}>\n\n            <Title isSize={5} >From: {message.first_name} {message.last_name}</Title>\n            <p>Date Sent: <Moment format=\"YYYY-MM-DD\">{message.date_sent}</Moment></p>\n            <p>Subject: {message.subject}</p>\n            <Button isColor=\"primary\" onClick={() => history.push(`/messages/${message.id}`)} style={{width: \"fit-content\", margin: \"0 auto\"}}>View Message</Button>\n          </Box>\n          )\n        })}\n        </Box>\n    </Card>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport BootcampHome from \"./BootcampHome\";\nimport AdminHome from \"./AdminHome\";\nimport CompanyHome from \"./CompanyHome\";\n\nexport default function Home() {\n  const user = useSelector(state => state.user);\n\n  return (\n    <>\n      {user.user_types_id === 1 && user.auth === true ? (\n        <AdminHome />\n      ) : user.user_types_id === 2 && user.auth === true ? (\n        <BootcampHome />\n      ) : user.user_types_id === 3 && user.auth === true ? (\n        <CompanyHome />\n      ) : (user.user_types_id === 2 || user.user_types_id === 3) &&\n        user.auth === false ? (\n        \"\"\n      ) : (\n        // <></>\n        window.location.replace(\"/\")\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport Axios from \"axios\";\n\nimport {\n  Card,\n  CardHeader,\n  CardHeaderTitle,\n  CardContent,\n  Content,\n  CardFooter,\n  CardFooterItem,\n  Button\n} from \"bloomer\";\nimport styled from \"styled-components\";\n\nconst fetchJobsData = async (companyId) => {\n  const endpoint = `http://localhost:3000/posts/jobs/company/${companyId}`;\n  const res = await Axios.get(endpoint);\n  const activeJobs = res.data.filter(job => job.is_active === true);\n  return activeJobs;\n};\n\n// This component fetches all the data that will populate each job post\nconst CompanyJobs = () => {\n  const user = useSelector(state => state.user);\n  const [jobs, setJobs] = useState([]);\n\n\n  // the 2nd empty array argument prevents infinite re-renders.\n  useEffect(() => {\n    fetchJobsData(user.companies_id).then(activeJobs => setJobs(activeJobs));\n  }, [user.companies_id]);\n\n  // mapping over data and passing job data as props to the Job Card which renders job posts\n  return (\n    <>\n      <Link to={`/create-job`}>\n        <Button>Create a job post!</Button>\n      </Link>\n      <JobCardWrapper>\n        {jobs.map(job => {\n          return <JobCard key={job.id} data={job} />;\n        })}\n      </JobCardWrapper>\n    </>\n  );\n};\n\nconst fetchCompanyData = async (companyId) => {\n  const endpoint = `http://localhost:3000/companies/id/${companyId}`;\n  const res = await Axios.get(endpoint);\n  const data = res.data\n  return data\n};\n// These are the actual job posts. They receive data from the JobBoard component.\nconst JobCard = props => {\n  const { data } = props;\n  const [companyData, setCompanyData] = useState([]);\n\n\n  useEffect(() => {\n    fetchCompanyData(data.companies_id).then(data => setCompanyData(data));\n  }, [data.companies_id]);\n\n  return (\n    <Card\n      style={{\n        maxWidth: \"400px\",\n        margin: \"20px\",\n        display: \"flex\",\n        flexDirection: \"column\"\n      }}\n    >\n      <CardHeader>\n        <CardHeaderTitle>{data.title}</CardHeaderTitle>\n      </CardHeader>\n      <CardContent>\n        <Content>\n          <strong>Date Posted: </strong>\n          <Moment format=\"YYYY-MM-DD\">{data.date_posted}</Moment>\n        </Content>\n        <Content>\n          <strong>Experience: </strong> {data.experience}\n        </Content>\n        <Content>\n          <strong>Company Name: </strong>\n          <Link to={`/company/${companyData.id}`}>{companyData.name}</Link>\n        </Content>\n        <Content>\n          <strong>Contact Email: </strong>\n          {data.contact_email}\n        </Content>\n      </CardContent>\n      <CardFooter style={{ marginTop: \"auto\" }}>\n        <CardFooterItem>\n          <Button isColor=\"primary\">\n            <Link to={`/jobs/${data.id}`}>View Details</Link>\n          </Button>\n        </CardFooterItem>\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst JobCardWrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: flex-start;\n`;\n\nexport default CompanyJobs;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport Axios from \"axios\";\nimport {\n  Card,\n  CardHeader,\n  CardHeaderTitle,\n  CardContent,\n  Content,\n  Button,\n  CardFooter,\n  CardFooterItem\n} from \"bloomer\";\nimport styled from \"styled-components\";\n\n\n\n// This component fetches all the data that will populate each job post\nconst fetchJobsData = async () => {\n  const endpoint = \"http://localhost:3000/posts/jobs\";\n  const res = await Axios.get(endpoint);\n  const activeJobs = res.data.filter(job => job.is_active === true);\n  return activeJobs\n};\n\nconst JobBoard = () => {\n  const [jobs, setJobs] = useState([]);\n\n\n  // the 2nd empty array argument prevents infinite re-renders.\n  useEffect(() => {\n    fetchJobsData().then(activeJobs => setJobs(activeJobs));\n  }, []);\n\n  // mapping over data and passing job data as props to the Job Card which renders job posts\n  return (\n    <JobCardWrapper>\n      {jobs.map(job => (\n        <JobCard key={job.id} data={job} />\n      ))}\n    </JobCardWrapper>\n  );\n};\n\nconst fetchCompanyData = async (companyId) => {\n  const endpoint = `http://localhost:3000/companies/id/${companyId}`;\n  const res = await Axios.get(endpoint);\n  const data = res.data\n  return data\n \n};\n// These are the actual job posts. They receive data from the JobBoard component.\nconst JobCard = ({ data }) => {\n  const [companyData, setCompanyData] = useState([]);\n\n  // Grabs company profile data based on posts_jobs. This could've been an inner join however, since inner join creates a new table, being able to detect the jobs id in the JobCard Component does not match jobs id in the posts_jobs table\n\n  useEffect(() => {\n    fetchCompanyData(data.companies_id).then(data => setCompanyData(data));\n  }, [data.companies_id]);\n\n  // Currently not being used since decision was made to allow an application only when they are viewing the full details of the job post\n  // const postApplication = () => {\n  //   const endpoint = \"http://localhost:3000/job-applications/add-application/\";\n  //   const payload = {\n  //     users_id: user.id,\n  //     posts_jobs_id: data.id\n  //   };\n\n  //   Axios.post(endpoint, payload)\n  //     .then(res => {\n  //       alert(\"Your application was received.\");\n  //     })\n  //     .catch(err => {\n  //       alert(\"You have already applied for this job.\");\n  //     });\n  // };\n  const history = useHistory();\n  const handleReportClick = () => {\n    history.replace(\n      `/report/job/${data.id}/${data.companies_id}/${data.users_id}`\n    );\n  };\n\n  return (\n    <Card style={{ maxWidth: \"400px\", margin: \"20px\", display: 'flex', flexDirection: 'column'}}>\n      <CardHeader>\n        <CardHeaderTitle>{data.title}</CardHeaderTitle>\n      </CardHeader>\n      <CardContent>\n        <Content>\n          <strong>Company Name: </strong>\n          <Link to={`/company/${companyData.id}`}>{companyData.name}</Link>\n        </Content>\n        <Content>\n          <strong>Date Posted: </strong>\n          <Moment format=\"YYYY-MM-DD\">{data.date_posted}</Moment>\n        </Content>\n        <Content>\n          <strong>Full post: </strong>\n          <Link style={{ color: \"blue\" }} to={`/jobs/${data.id}`}>\n            See full post\n          </Link>\n        </Content>\n        <Content>\n          <strong>Experience: </strong> {data.experience}\n        </Content>\n        <Content>\n          <strong>Contact Email: </strong>\n          {data.contact_email}\n        </Content>\n      </CardContent>\n      <CardFooter style={{marginTop: 'auto'}}>\n      <CardFooterItem>\n        <Button isColor=\"danger\" onClick={handleReportClick}>Report this job posting</Button>\n      </CardFooterItem>\n    </CardFooter>\n    </Card>\n  );\n};\n\nconst JobCardWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nexport default JobBoard;\n","import React from \"react\";\nimport JobBoard from \"./JobBoard\";\n\nconst BootcampJobs = () => <JobBoard />;\n\nexport default BootcampJobs;\n","// This component is what will render when bootcamp user and company user click on Jobs in the NavBar. The logic below renders the correct Job view depending on user type\nimport React from \"react\";\nimport CompanyJobs from \"./CompanyJobs\";\nimport BootcampJobs from \"./BootcampJobs\";\nimport { useSelector } from \"react-redux\";\n\nconst Jobs = () => {\n  const user = useSelector(state => state.user);\n\n  return (\n    <div>\n      {user.user_types_id === 2 || user.user_types_id === 1 ? (\n        <BootcampJobs />\n      ) : user.user_types_id === 3 ? (\n        <CompanyJobs />\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\n\nexport default Jobs;","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Card,\n  CardHeaderTitle,\n  CardImage,\n  CardContent,\n  Image,\n  Box,\n  Input,\n  Field,\n  Label,\n  Title,\n  TextArea,\n  Button\n} from \"bloomer\";\n\nimport { Anchor } from \"../Styles/navStyles\";\nimport { CardContainer } from \"../Styles/CardContainers\";\n\nconst UserProfile = () => {\n  const user = useSelector(state => state.user);\n  const [skillsArray, setSkillsArray] = useState([]);\n  const [isEditMode, setEditMode] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    id: \"\",\n    email: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    github_url: \"\",\n    linkedin_url: \"\",\n    bootcamp_name: \"\",\n    personal_website: \"\",\n    about: \"\",\n    skills: \"\",\n    profile_pic_url: \"\"\n  });\n\n  // This plucks the id from the URL so we can use it in the getUserInfo and useEffect functions\n  let { id } = useParams();\n  const history = useHistory();\n\n  const getUserInfo = async id => {\n    const response = await axios.get(`http://localhost:3000/profiles/id/${id}`);\n    setUserInfo(response.data);\n    setSkillsArray(response.data.skills);\n  };\n\n  useEffect(() => {\n    getUserInfo(id);\n  }, [id]);\n\n  const postReport = e => {\n    e.preventDefault();\n    history.push(`/report/user/${userInfo.id}/${userInfo.companies_id}`);\n  };\n\n  const handleEditMode = e => {\n    e.preventDefault();\n    setEditMode(true);\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setUserInfo({ ...userInfo, [name]: value });\n  };\n\n  const updateUser = async id => {\n    const endpoint = `http://localhost:3000/update/${id}`;\n\n    let skillsArray = userInfo.skills.split(\",\");\n\n    const payload = {\n      github_url: userInfo.github_url,\n      linkedin_url: userInfo.linkedin_url,\n      personal_website: userInfo.personal_website,\n      about: userInfo.about,\n      skills: skillsArray,\n      profile_pic_url: userInfo.profile_pic_url\n    };\n    await axios.put(endpoint, payload);\n    setSkillsArray(skillsArray);\n  };\n\n  const handleEditSubmit = e => {\n    e.preventDefault();\n    updateUser(id);\n    setEditMode(false);\n    history.push(`/user/${id}`);\n  };\n\n  return (\n    <>\n      {isEditMode ? (\n        <Box style={{ margin: \"16px\" }}>\n          <Title style={{ textAlign: \"center\" }}>Edit Your Profile</Title>\n          <form onSubmit={handleEditSubmit} style={{ padding: \"32px\" }}>\n            <Field>\n              <Label>\n                Profile Pic URL\n                <Input\n                  type=\"url\"\n                  placeholder=\"Profile Pic URL\"\n                  name=\"profile_pic_url\"\n                  value={userInfo.profile_pic_url}\n                  onChange={handleChange}\n                ></Input>\n              </Label>\n            </Field>\n            <Field>\n              <Label>\n                Github Profile\n                <Input\n                  type=\"url\"\n                  placeholder=\"Github Profile URL\"\n                  name=\"github_url\"\n                  value={userInfo.github_url}\n                  onChange={handleChange}\n                ></Input>\n              </Label>\n            </Field>\n            <Field>\n              <Label>\n                LinkedIn Profile\n                <Input\n                  type=\"url\"\n                  placeholder=\"LinkedIn Profile\"\n                  name=\"linkedin_url\"\n                  value={userInfo.linkedin_url}\n                  onChange={handleChange}\n                ></Input>\n              </Label>\n            </Field>\n            <Field>\n              <Label>\n                Personal Website\n                <Input\n                  type=\"url\"\n                  placeholder=\"Your Personal Website\"\n                  name=\"personal_website\"\n                  value={userInfo.personal_website}\n                  onChange={handleChange}\n                ></Input>\n              </Label>\n            </Field>\n            <Field>\n              <Label>\n                About Me\n                <TextArea\n                  type=\"text\"\n                  placeholder=\"About Me\"\n                  name=\"about\"\n                  value={userInfo.about}\n                  onChange={handleChange}\n                />\n              </Label>\n            </Field>\n            <Field>\n              <Label>\n                Skills\n                <TextArea\n                  type=\"text\"\n                  placeholder=\"Skills\"\n                  name=\"skills\"\n                  value={userInfo.skills}\n                  onChange={handleChange}\n                />\n              </Label>\n            </Field>\n            <Button isColor=\"primary\" type=\"submit\">\n              Edit Your Profile\n            </Button>\n          </form>\n        </Box>\n      ) : (\n        <CardContainer>\n          <Card>\n            {userInfo.id === user.id ? (\n              <Button onClick={handleEditMode}>Edit Your Profile</Button>\n            ) : (\n              <></>\n            )}\n            <CardHeaderTitle>\n              <strong>User Name</strong>: {userInfo.first_name}{\" \"}\n              {userInfo.last_name}\n            </CardHeaderTitle>\n            {userInfo.id !== user.id && (\n              <Button isColor=\"danger\" onClick={postReport}>\n                Report {userInfo.first_name}\n              </Button>\n            )}\n            <CardContent>\n              <CardImage>\n                <Image isSize=\"128x128\" src={userInfo.profile_pic_url} />\n              </CardImage>\n              <h2>\n                <strong>Bootcamp</strong>: {userInfo.bootcamp_name}\n              </h2>\n              <h2>\n                <strong>Email</strong>:{\" \"}\n                <Anchor target=\"_blank\" href=\"mailto:{userInfo.email}\">\n                  {userInfo.email}\n                </Anchor>\n              </h2>\n              <h2>\n                <strong>Github</strong>:{\" \"}\n                <Anchor target=\"_blank\" href={userInfo.github_url}>\n                  {userInfo.github_url}\n                </Anchor>\n              </h2>\n              <h2>\n                <strong>LinkedIn</strong>:{\" \"}\n                <Anchor target=\"_blank\" href={userInfo.linkedin_url}>\n                  {userInfo.linkedin_url}\n                </Anchor>\n              </h2>\n              <h2>\n                <strong>Personal Website</strong>:{\" \"}\n                <Anchor target=\"_blank\" href={userInfo.personal_website}>\n                  {userInfo.personal_website}\n                </Anchor>\n              </h2>\n              <h2>\n                <strong>About</strong>:{\" \"}\n              </h2>\n              <p>{userInfo.about}</p>\n              <h2>\n                <strong>Skills</strong>:{\" \"}\n              </h2>\n              {skillsArray ? (\n                <ul>\n                  {Object.values(skillsArray).map(skill => {\n                    return (\n                      <li style={{ display: \"inline\", margin: \"10px\" }}>\n                        {skill}\n                      </li>\n                    );\n                  })}\n                </ul>\n              ) : (\n                <></>\n              )}{\" \"}\n            </CardContent>\n          </Card>\n        </CardContainer>\n      )}\n    </>\n  );\n};\n\nexport default UserProfile;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport BootcampProfile from \"./BootcampProfile\";\n\nexport default function Index() {\n  const user = useSelector(state => state.user);\n\n  return (\n    <div>\n      {/* as long as you're authorized, you can view the bootcamp profile. This opens it up for company users and bootcamp users to see each others profiles */}\n      {user.auth === true ? (\n        <BootcampProfile />\n      ) : (user.user_types_id === 2 || user.user_types_id === 3) &&\n        user.auth === false ? (\n        <>\n          This is what someone who has an account registered but is unauthorized\n          would see\n        </>\n      ) : (\n        window.location.replace(\"/\")\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardHeaderTitle,\n  CardImage,\n  CardContent,\n  Image,\n  Box,\n  Input,\n  Field,\n  Label,\n  Title,\n  TextArea,\n  Button\n} from \"bloomer\";\n\nimport { Anchor } from \"../Styles/navStyles\";\nimport { CardContainer } from \"../Styles/CardContainers\";\n\nconst CompanyProfile = () => {\n  const company = useSelector(state => state.user);\n  const [companyInfo, setCompanyInfo] = useState({\n    id: \"\",\n    email: \"\",\n    name: \"\",\n    company_url: \"\",\n    company_logo_url: \"\",\n    description: \"\"\n  });\n  const [isEditMode, setEditMode] = useState(false);\n\n  // This plucks the id from the URL so we can use it in the getCompanyInfo and useEffect functions\n  let { id } = useParams();\n\n  const getCompanyInfo = async id => {\n    const response = await axios.get(\n      `http://localhost:3000/companies/id/${id}`\n    );\n    setCompanyInfo(response.data);\n  };\n\n  const history = useHistory();\n  const postReport = () => {\n    history.push(`/report/company/${companyInfo.id}`);\n  };\n\n  useEffect(() => {\n    getCompanyInfo(id);\n  }, [id]);\n\n  const handleEditMode = e => {\n    e.preventDefault();\n    setEditMode(true);\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setCompanyInfo({ ...companyInfo, [name]: value });\n  };\n\n  const updateCompany = async id => {\n    const endpoint = `http://localhost:3000/companies/update/${id}`;\n    const payload = {\n      email: companyInfo.email,\n      name: companyInfo.name,\n      company_url: companyInfo.company_url,\n      company_logo_url: companyInfo.company_logo_url,\n      description: companyInfo.description\n    };\n    await axios.put(endpoint, payload);\n  };\n\n  const handleEditSubmit = e => {\n    e.preventDefault();\n    updateCompany(id);\n    setEditMode(false);\n    history.push(`/company/${id}`);\n  };\n\n  return (\n    <>\n      {isEditMode ? (\n        <Box style={{ margin: \"16px\" }}>\n          <Title style={{ textAlign: \"center\" }}>Edit Your Profile</Title>\n          <form onSubmit={handleEditSubmit}>\n            <Field>\n              <Label>\n                Company Name\n                <Input\n                  type=\"text\"\n                  placeholder=\"Company name\"\n                  name=\"name\"\n                  value={companyInfo.name}\n                  onChange={handleChange}\n                ></Input>\n              </Label>\n            </Field>\n            <Field>\n              <Label>\n                Link to Company Logo\n                <Input\n                  type=\"url\"\n                  placeholder=\"Link to your company logo\"\n                  name=\"company_logo_url\"\n                  value={companyInfo.company_logo_url}\n                  onChange={handleChange}\n                ></Input>\n              </Label>\n            </Field>\n            <Field>\n              <Label>\n                Company Email\n                <Input\n                  type=\"email\"\n                  placeholder=\"Link to your company logo\"\n                  name=\"email\"\n                  value={companyInfo.email}\n                  onChange={handleChange}\n                ></Input>\n              </Label>\n            </Field>\n            <Field>\n              <Label>\n                Company Website\n                <Input\n                  type=\"url\"\n                  placeholder=\"Company Website\"\n                  name=\"company_url\"\n                  value={companyInfo.company_url}\n                  onChange={handleChange}\n                ></Input>\n              </Label>\n            </Field>\n            <Field>\n              <Label>\n                About Us\n                <TextArea\n                  type=\"text\"\n                  placeholder=\"About Us\"\n                  name=\"description\"\n                  value={companyInfo.description}\n                  onChange={handleChange}\n                ></TextArea>\n              </Label>\n            </Field>\n            <Button isColor=\"primary\" type=\"submit\">\n              Edit Company Profile\n            </Button>\n          </form>\n        </Box>\n      ) : (\n        <CardContainer>\n          <Card>\n            {companyInfo.id === company.companies_id ? (\n              <Button onClick={handleEditMode}>Edit Profile</Button>\n            ) : (\n              <></>\n            )}\n            <CardHeader>\n              <CardHeaderTitle>\n                <strong>Company Name</strong>: {companyInfo.name}\n              </CardHeaderTitle>\n            </CardHeader>\n            {companyInfo.id !== company.companies_id && (\n              <Button isColor=\"danger\" onClick={postReport}>\n                Report {companyInfo.name}\n              </Button>\n            )}\n            <CardContent>\n              <CardImage>\n                <Image\n                  isSize=\"128x128\"\n                  src={companyInfo.company_logo_url}\n                  alt=\"company logo\"\n                />\n              </CardImage>\n              <h2>\n                <strong>Email</strong>:{\" \"}\n                <Anchor target=\"_blank\" href=\"mailto:{companyInfo.email}\">\n                  {companyInfo.email}\n                </Anchor>\n              </h2>\n              <h2>\n                <strong>Website</strong>:{\" \"}\n                <Anchor target=\"_blank\" href={companyInfo.company_url}>\n                  {companyInfo.company_url}\n                </Anchor>\n              </h2>\n\n              <h2>\n                <strong>About</strong>:{\" \"}\n              </h2>\n              <p>{companyInfo.description}</p>\n            </CardContent>\n          </Card>\n        </CardContainer>\n      )}\n    </>\n  );\n};\n\nexport default CompanyProfile;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport CompanyProfile from \"./CompanyProfile\";\n\nexport default function Index() {\n  const user = useSelector(state => state.user);\n\n  return (\n    <div>\n      {/* as long as you're authorized, you can view the company profile. This opens it up for company users and bootcamp users to see each others profiles */}\n      {user.auth === true ? (\n        <CompanyProfile />\n      ) : (user.user_types_id === 2 || user.user_types_id === 3) &&\n        user.auth === false ? (\n        <>\n          This is what someone who has an account registered but is unauthorized\n          would see\n        </>\n      ) : (\n        window.location.replace(\"/\")\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\nimport {\n  CardContent,\n  Card,\n  CardHeader,\n  CardHeaderTitle,\n  CardFooter\n} from \"bloomer\";\nimport { Anchor } from \"../Styles/navStyles\";\nimport styled from \"styled-components\";\n\nconst BootcampViewApplications = () => {\n  const user = useSelector(state => state.user);\n  const [userApplications, setUserApplications] = useState([]);\n\n  const getUserApplications = async id => {\n    const response = await axios.get(\n      `http://localhost:3000/job-applications/user/${id}`\n    );\n    setUserApplications(response.data);\n  };\n\n  useEffect(() => {\n    getUserApplications(user.id);\n  }, [user.id]);\n\n  return (\n    <ul>\n      <ApplicationCardWrapper>\n        {userApplications.map(application => {\n          return (\n            <Card style={{ width: \"400px\", margin: \"20px\" }}>\n              <li key={application.id}>\n                <CardHeader>\n                  <CardHeaderTitle>\n                    <Link to={`/jobs/${application.posts_jobs_id}`}>\n                      <Anchor>{application.title}</Anchor>\n                    </Link>\n                  </CardHeaderTitle>\n                </CardHeader>\n                <CardContent>\n                  <p>Company: {application.name}</p>\n                  <p>\n                    Date Applied:{\" \"}\n                    <Moment format=\"YYYY-MM-DD\">\n                      {application.date_applied}\n                    </Moment>\n                  </p>\n                  <p>\n                    Date Posted:{\" \"}\n                    <Moment format=\"YYYY-MM-DD\">\n                      {application.date_posted}\n                    </Moment>\n                  </p>\n                  <CardFooter />\n                  <p>\n                    Application Status:{\" \"}\n                    {!application.rejected && !application.accepted\n                      ? \"Pending\"\n                      : application.rejected\n                      ? \"Rejected\"\n                      : application.accepted\n                      ? \"Approved\"\n                      : \"\"}\n                  </p>\n                </CardContent>\n              </li>\n            </Card>\n          );\n        })}\n      </ApplicationCardWrapper>\n    </ul>\n  );\n};\n\nconst ApplicationCardWrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: flex-start;\n`;\n\nexport default BootcampViewApplications;\n","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport {\n  Card,\n  CardHeader,\n  CardHeaderTitle,\n  CardContent,\n  Content,\n  CardFooter,\n  CardFooterItem,\n  Control,\n  Input,\n  Field,\n  Label,\n  Title,\n  TextArea,\n  Button,\n  Select,\n  Box\n} from \"bloomer\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst getJobPostsByCompanyId = async (companyId) => {\n  const endpoint = `http://localhost:3000/posts/jobs/company/${companyId}`;\n  const res = await Axios.get(endpoint);\n  const data = res.data\n  return data\n};\n\nconst CompanyApplications = () => {\n\n  const user = useSelector(state => state.user);\n  const [jobs, setJobs] = useState([]);\n  const [jobId, setJobId] = useState(\"\");\n  const [showApplicants, setShowApplicants] = useState(false);\n\n  \n\n  function handleChange(e) {\n    setJobId(e.target.value);\n    setShowApplicants(false);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setShowApplicants(true);\n  }\n\n  useEffect(() => {\n    getJobPostsByCompanyId(user.companies_id).then(data => {\n      if(data.length > 1){\n        setJobs(data)\n        setJobId(String(data[0].id))\n      }else {\n        setJobs()\n        setJobId();\n      }\n    });\n  }, [user.companies_id]);\n\n  return (\n    <>\n      <FormWrapper>\n        <form\n          onSubmit={handleSubmit}\n          style={{ display: \"flex\", flexDirection: \"column\" }}\n        >\n          <h1 style={{ textAlign: \"center\", fontSize: \"300%\" }}>\n            Select a job to display applicants\n          </h1>\n          <Field style={{ alignSelf: \"center\" }}>\n            <Control>\n              <Select onChange={handleChange} value={jobId}>\n                {jobs.map((job, i) => {\n                  return (\n                    <option key={i} value={job.id}>\n                      {job.title}\n                    </option>\n                  );\n                })}\n              </Select>\n            </Control>\n          </Field>\n          <Button isColor=\"primary\" type=\"submit\">\n            See Applicants\n          </Button>\n        </form>\n      </FormWrapper>\n\n      <ApplicantCardWrapper>\n        {showApplicants ? <ApplicantsData jobId={jobId} /> : null}\n      </ApplicantCardWrapper>\n    </>\n  );\n};\n\nconst FormWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst getApplicantsByJobId = async (jobsId) => {\n  const endpoint = `http://localhost:3000/api/applicants/${jobsId}`;\n  const res = await Axios.get(endpoint);\n  const data = res.data\n  return data\n};\n\nconst ApplicantsData = props => {\n\n  const user = useSelector(state => state.user);\n  const [applicants, setApplicants] = useState([]);\n  const [showMessage, setShowMessage] = useState(false);\n  const [showApplicants, setShowApplicants] = useState(true);\n  const [messageApplicant, setMessageApplicant] = useState(\"\");\n  const [sendMessage, setSendMessage] = useState({\n    subject: \"\",\n    message: \"\",\n    sent_from: \"\",\n    sent_to: \"\",\n    sent_from_companies_id: null\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const endpoint = \"http://localhost:3000\";\n    const send = await Axios.post(`${endpoint}/sendmessage`, sendMessage);\n    if (send.status === 200) {\n      alert(\"Message Sent\");\n      setShowMessage(false);\n    } else {\n      alert(\"There was a problem sending the message please try again later\");\n    }\n  };\n\n\n  useEffect(() => {\n    getApplicantsByJobId(props.jobId).then(data => setApplicants(data));\n  }, [props.jobId]);\n\n  const handleRejection = async (applicantId, jobId) => {\n    const endpoint = `http://localhost:3000/job-applications/update-status/${applicantId}/${jobId}`;\n    await Axios.put(endpoint);\n    getApplicantsByJobId();\n    alert(\"Applicant was rejected.\");\n  };\n\n  const showMessageForm = applicant => {\n    setShowMessage(true);\n    setShowApplicants(false);\n    setMessageApplicant(applicant);\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setSendMessage({\n      ...sendMessage,\n      [name]: value,\n      sent_from: user.id,\n      sent_to: messageApplicant.applicantid,\n      sent_from_companies_id: user.companies_id\n    });\n  };\n\n  return (\n    <>\n      {applicants && showApplicants ? (\n        applicants.map(applicant => {\n          return (\n            <Card\n              key={applicant.jobId}\n              style={{\n                maxWidth: \"375px\",\n                margin: \"20px\",\n                display: \"flex\",\n                flexDirection: \"column\"\n              }}\n            >\n              <CardHeader>\n                <CardHeaderTitle>\n                  {applicant.first_name} {applicant.last_name}\n                </CardHeaderTitle>\n              </CardHeader>\n              <CardContent>\n                <Content>\n                  <strong>Date Applied:{\" \"}</strong>\n                  <Moment format=\"YYYY-MM-DD\">{applicant.date_applied}</Moment>\n                </Content>\n                <Content>\n                  <strong>Email Address:{\" \"}</strong> {applicant.email}\n                </Content>\n                <Content>\n                  <strong>Skills:{\" \"}</strong>\n                    {applicant.skills.map((skill, i) => {\n                      return <p key={i} style={{display: \"inline\"}}>{skill}{\" \"}</p>;\n                    })}\n                </Content>\n                <Content>\n                  <strong>Github Page:{\" \"}</strong>\n                  <a href={applicant.github_url}>\n                    {applicant.first_name}'s Github Profile\n                  </a>\n                </Content>\n                <Content>\n                  <strong>LinkedIn:{\" \"}</strong>\n                  <a href={applicant.linkedin_url}>\n                    {applicant.first_name}'s LinkedIn Profile\n                  </a>\n                </Content>\n                <Content>\n                  <strong>Bootcamp Name:{\" \"}</strong>\n                  <p>{applicant.bootcamp_name}</p>\n                </Content>\n                <Content>\n                  <strong>Application Status:{\" \"}</strong>\n                  <p>\n                    {!applicant.rejected && !applicant.accepted\n                      ? \"<pending>\"\n                      : applicant.rejected\n                      ? \"rejected\"\n                      : applicant.accepted\n                      ? \"approved\"\n                      : \"\"}\n                  </p>\n                </Content>\n              </CardContent>\n              <CardFooter style={{ marginTop: \"auto\" }}>\n                <CardFooterItem style={{display: \"flex\", justifyContent: \"space-around\"}}>\n                  <Button onClick={() => showMessageForm(applicant)}>\n                    Message\n                  </Button>\n                  <Link to={`/user/${applicant.applicantid}`}>\n                    <Button>View Profile</Button>\n                  </Link>\n                  <Button\n                    onClick={() =>\n                      handleRejection(applicant.applicantid, applicant.jobid)\n                    }\n                  >\n                    Reject\n                  </Button>\n                </CardFooterItem>\n              </CardFooter>\n            </Card>\n          );\n        })\n      ) : showMessage ? (\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Box style={{ margin: \"32px\" }}>\n            <Title style={{ textAlign: \"center\" }} isSize={4}>\n              Reply to {messageApplicant.first_name}\n            </Title>\n            <form onSubmit={handleSubmit} style={{ padding: \"32px 128px\" }}>\n              <Field>\n                <Label>Send To</Label>\n                <Control>\n                  <Input\n                    type=\"text\"\n                    placeholder={\n                      messageApplicant.first_name +\n                      \" \" +\n                      messageApplicant.last_name\n                    }\n                    name=\"receiver\"\n                    aria-label=\"receiver\"\n                    disabled\n                  />\n                </Control>\n              </Field>\n\n              <Field>\n                <Label>Subject</Label>\n                <Control>\n                  <Input\n                    type=\"text\"\n                    onChange={handleChange}\n                    name=\"subject\"\n                    aria-label=\"subject\"\n                  />\n                </Control>\n              </Field>\n\n              <Field>\n                <Label>Message</Label>\n                <Control>\n                  <TextArea\n                    type=\"textarea\"\n                    onChange={handleChange}\n                    name=\"message\"\n                    aria-label=\"message\"\n                  />\n                </Control>\n              </Field>\n\n              <Field isGrouped>\n                <Control>\n                  <Button type=\"submit\" isColor=\"primary\">\n                    Submit\n                  </Button>\n                </Control>\n              </Field>\n            </form>\n          </Box>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default CompanyApplications;\n\nconst ApplicantCardWrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-evenly;\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport BootcampViewApplications from \"./BootcampViewApplications\";\nimport CompanyApplications from \"./CompanyApplications\";\n\nexport default function Applications() {\n  const user = useSelector(state => state.user);\n\n  return (\n    <div>\n      {user.user_types_id === 2 && user.auth === true ? (\n        <BootcampViewApplications />\n      ) : user.user_types_id === 3 && user.auth === true ? (\n        <CompanyApplications />\n      ) : (\n        // <></>\n        window.location.replace(\"/\")\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\n\n// import { Form, Label, Input, Button as FormButton } from '../Styles/FormStyles';\nimport {\n  Input,\n  Field,\n  Label,\n  TextArea,\n  Button\n} from \"bloomer\";\n\nimport { Modal, ModalBackground, ModalContent, ModalClose } from 'bloomer';\n\nconst EditResourceModal = props => {\n  const { editFormActive, setEditFormActive, resource, fetchResourcesData } = props;\n\n  const [editState, setEditState] = useState({\n    title: resource.title,\n    short_description: resource.short_description,\n    full_description: resource.full_description,\n    resource_url: resource.resource_url,\n    resourceEdited: false\n  });\n\n  const handleEdit = e => {\n    const { name, value } = e.target;\n    setEditState({ ...editState, [name]: value });\n  };\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n    const resourceId = resource.id\n    const endpoint = `http://localhost:3000/resources/update/${resourceId}`;\n\n    const payload = {\n      title: editState.title,\n      short_description: editState.short_description,\n      full_description: editState.full_description,\n      resource_url: editState.resource_url,\n      resourceId\n    };\n\n    setEditState({ ...editState, resourceEdited: true });\n    await axios.put(endpoint, payload);\n    setEditFormActive(false)\n    fetchResourcesData()\n  }\n\n  return (\n    <Modal isActive={editFormActive}>\n      <ModalBackground />\n      <ModalContent style={{ width: '85vw', backgroundColor: \"white\", padding: \"64px\"}}>\n        <form onSubmit={handleUpdate}>\n          <Field>\n\n          <Label>\n            Resource Title\n            <Input\n              type=\"text\"\n              placeholder=\"Resource Title\"\n              name=\"title\"\n              value={editState.title}\n              onChange={handleEdit}\n              ></Input>\n          </Label>\n              </Field>\n              <Field>\n\n          <Label>\n            Resource Description (short)\n            <TextArea\n              rows=\"5\"\n              cols=\"33\"\n              placeholder=\"Short description of resource\"\n              name=\"short_description\"\n              value={editState.short_description}\n              onChange={handleEdit}\n              />\n          </Label>\n              </Field>\n              <Field>\n\n          <Label>\n            Resource Description (full)\n            <TextArea\n              rows=\"5\"\n              cols=\"33\"\n              placeholder=\"Full description of resource\"\n              name=\"full_description\"\n              value={editState.full_description}\n              onChange={handleEdit}\n              />\n          </Label>\n              </Field>\n              <Field>\n\n          <Label>\n            Resource Link (URL)\n            <Input\n              type=\"url\"\n              placeholder=\"Link to resource\"\n              name=\"resource_url\"\n              value={editState.resource_url}\n              onChange={handleEdit}\n              ></Input>\n          </Label>\n              </Field>\n          <Button isColor=\"primary\" type=\"submit\">Update Resource</Button>\n        </form>\n      </ModalContent>\n      <ModalClose onClick={() => setEditFormActive(false)} />\n    </Modal>\n  );\n};\n\nexport default EditResourceModal;\n","import React from \"react\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\nimport EditResourceModal from './EditResourceModal';\nimport styled from 'styled-components';\n\nimport {\n  Box,\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Card,\n  CardHeader,\n  CardHeaderTitle,\n  CardContent,\n  Content,\n  CardFooter,\n  CardFooterItem,\n  Media,\n  MediaContent,\n  Title,\n  Subtitle\n} from \"bloomer\";\n\nconst BootcampResourceCard = (props) => {\n\n  const {\n    title,\n    resourceURL,\n    cardResource,\n    resourceId,\n    datePosted,\n    usersId,\n    firstName,\n    lastName,\n    email,\n    githubLink,\n    linkedinLink,\n    descriptionShort,\n    descriptionFull,\n    user,\n    editResource,\n    deleteResource,\n    editFormActive,\n    setEditFormActive,\n    fetchResourcesData,\n    resourceCardStyles\n  } = props;\n\n  return (\n    <Card\n      style={resourceCardStyles}\n    >\n      <CardHeader>\n        <CardHeaderTitle style={{fontSize: '1.25rem'}}>{title}</CardHeaderTitle>\n      </CardHeader>\n      <CardContent>\n        <Media>\n          <MediaContent hasTextAlign={\"left\"}>\n            <Title style={{fontSize: '1.35rem'}}>Resource Info</Title>\n            <Subtitle isSize={6}>\n              <Breadcrumb style={{fontSize: '1rem'}} isAlign={\"left\"}>\n                <ul>\n                  <BreadcrumbItem>\n                    <Anchor href={resourceURL} target=\"_blank\" rel=\"noopener noreferrer\">\n                      Resource link\n              </Anchor>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem>\n                  <Link to={`/resources/${resourceId}`}>\n                    Full post\n            </Link>\n                </BreadcrumbItem>\n                </ul>\n                <ul>\n                  <BreadcrumbItem>\n              <Moment format=\"YYYY-MM-DD\">{datePosted}</Moment>\n                  </BreadcrumbItem> &nbsp;&nbsp;&nbsp;\n                  {console.log(cardResource, user)}\n                  {cardResource.users_id !== user.id ?\n                    <BreadcrumbItem>\n                      <Link\n                        to={`/report/resource/${cardResource.id}/${cardResource.users_id}`}\n                      >\n                        Report\n              </Link>\n                    </BreadcrumbItem> : null}\n                </ul>\n              </Breadcrumb>\n            </Subtitle>\n          </MediaContent>\n          <MediaContent hasTextAlign={\"right\"}>\n            <Title style={{fontSize: '1.35rem'}}>Resource Creator</Title>\n            <Subtitle isSize={6}>\n              <Breadcrumb style={{fontSize: '1rem'}} isAlign={\"right\"}>\n                <ul>\n                  <BreadcrumbItem>\n                    <Link to={`/user/${usersId}`}>\n                      {firstName} {lastName}\n                    </Link>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem>\n                    <a href={`mailto:${email}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                      Email\n              </a>\n                  </BreadcrumbItem>\n                </ul>\n                <ul>\n                  <BreadcrumbItem>\n                    <a href={githubLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                      GitHub\n              </a>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem>\n                    <a href={linkedinLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                      LinkedIn\n              </a>\n                  </BreadcrumbItem>\n                </ul>\n              </Breadcrumb>\n            </Subtitle>\n          </MediaContent>\n        </Media>\n        <Content>\n          <Box style={{fontSize: '1.15rem'}}>{descriptionShort}</Box>\n        </Content>\n        <Content style={{fontSize: '1.15rem'}}>{descriptionFull}</Content>\n      </CardContent>\n      {props.BackButton ? props.BackButton() : null}\n      {user.id === usersId || user.user_types_id === 1 ? (\n        <CardFooter style={{ marginTop: \"auto\" }}>\n          <CardFooterItem>\n            <Button\n              isColor={`success`}\n              onClick={e => editResource(e, cardResource)}\n            >\n              Edit\n      </Button>\n          </CardFooterItem>\n          <CardFooterItem>\n            <Button\n              isColor={`danger`}\n              onClick={() => {\n                deleteResource(resourceId)\n              }}\n            >\n              Delete\n      </Button>\n          </CardFooterItem>\n          {editFormActive.resourceId === cardResource.id ? (\n            <EditResourceModal\n              editFormActive={editFormActive}\n              setEditFormActive={setEditFormActive}\n              resource={cardResource}\n              fetchResourcesData={fetchResourcesData}\n            />\n          ) : null}\n        </CardFooter>\n      ) : null}{\" \"}\n    </Card>\n  );\n}\n\nconst Anchor = styled.a`\n  color: blue;\n`;\n\nexport default BootcampResourceCard;","import React, { Fragment } from \"react\";\nimport BootcampResourceCard from \"./BootcampResourceCard\";\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Title, Button } from \"bloomer\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst BootcampResourceGet = () => {\n  const user = useSelector(state => state.user);\n  const [resources, setResources] = useState([]);\n  const [resourcesFetched, setResourcesFetched] = useState(false);\n  // const [editFormActive, setEditFormActive] = useState(false);\n  const [editFormActive, setEditFormActive] = useState({\n    isActive: false,\n    resourceId: null\n  });\n\n  const fetchResourcesData = async () => {\n    const resourcesEndpoint = \"http://localhost:3000/resources/getAllResources\";\n    const res = await axios.get(resourcesEndpoint);\n    setResources(res.data);\n    setResourcesFetched(true);\n  };\n\n  const deleteResource = resourceId => {\n    confirmAlert({\n      title: \"Are you sure?\",\n      message:\n        \"Who knows how many people you helped by creating this resource! Please reconsider before clicking Yes. Regardless, thank you for your contribution, and we hope you contribute again soon!\",\n      buttons: [\n        {\n          label: \"Delete\",\n          onClick: async () => {\n            const endpoint = `http://localhost:3000/resources/delete/${resourceId}`;\n            await axios.put(endpoint);\n            await fetchResourcesData();\n          }\n        },\n        {\n          label: \"Keep\",\n          onClick: () => null\n        }\n      ]\n    });\n  };\n\n  const editResource = (e, resource) => {\n    setEditFormActive({\n      isActive: true,\n      resourceId: resource.id\n    });\n  };\n\n  useEffect(() => {\n    fetchResourcesData();\n  }, []);\n\n  const resourceCardStyles = {\n    maxWidth: \"600px\",\n    margin: \"20px\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  };\n\n  return (\n    <Fragment>\n      {user.user_types_id === 2 && (\n        <Title isSize={3} style={{ textAlign: \"center\", marginTop: 30 }}>\n          <Link to=\"/resources/submit\">\n            <Button isColor={\"link\"} isOutlined={true}>\n              Submit a resource!\n            </Button>\n          </Link>\n        </Title>\n      )}\n      <ResourceWrapper>\n        {resourcesFetched ? (\n          resources.map((resource, i) => {\n            const {\n              id: resourceId,\n              title,\n              short_description: descriptionShort,\n              resource_url: resourceURL,\n              date_posted: datePosted /* information beyond this line relates to resource poster */,\n              users_id: usersId,\n              email,\n              first_name: firstName,\n              last_name: lastName,\n              github_url: githubLink,\n              linkedin_url: linkedinLink\n            } = resource;\n            // const postReport = () => {\n            //   history.push(\n            //     `/report/resource/${resource.id}/${resource.users_id}`\n            //   );\n            // };\n            return (\n              <Fragment>\n                <BootcampResourceCard\n                  key={i}\n                  title={title}\n                  resourceURL={resourceURL}\n                  cardResource={resource}\n                  resourceId={resourceId}\n                  datePosted={datePosted}\n                  usersId={usersId}\n                  firstName={firstName}\n                  lastName={lastName}\n                  email={email}\n                  githubLink={githubLink}\n                  linkedinLink={linkedinLink}\n                  descriptionShort={descriptionShort}\n                  user={user}\n                  editResource={editResource}\n                  deleteResource={deleteResource}\n                  editFormActive={editFormActive}\n                  setEditFormActive={setEditFormActive}\n                  fetchResourcesData={fetchResourcesData}\n                  resourceCardStyles={resourceCardStyles}\n                />\n              </Fragment>\n            );\n          })\n        ) : (\n          <p>Loading ...</p>\n        )}\n      </ResourceWrapper>\n    </Fragment>\n  );\n};\n\n\nconst ResourceWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nexport default BootcampResourceGet;\n","import React, { Component, Fragment } from \"react\";\nimport BootcampResourceGet from \"./BootcampResourceGet\";\n\nclass Resources extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Fragment>\n        <BootcampResourceGet />\n      </Fragment>\n    );\n  }\n}\n\nexport default Resources;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport BootcampResourceCard from './BootcampResourceCard';\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {Button} from 'bloomer'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nconst fetchResourcesData = async (resourceId) => {\n  const resourcesEndpoint = `http://localhost:3000/resources/${resourceId}`;\n  const res = await axios.get(resourcesEndpoint);\n  const data = res.data\n  return data\n};\n\nconst ResourcePost = props => {\n  const user = useSelector(state => state.user);\n  const [resources, setResources] = useState([]);\n  const [resourcesFetched, setResourcesFetched] = useState(false);\n  const [editFormActive, setEditFormActive] = useState({\n    isActive: false,\n    resourceId: null\n  });\n\n\n  let history = useHistory();\n\n  const deleteResource = async resourceId => {\n    confirmAlert({\n      title: 'Are you sure?',\n      message: 'Who knows how many people you helped by creating this resource! Please reconsider before clicking Yes. Regardless, thank you for your contribution, and we hope you contribute again soon!',\n      buttons: [\n        {\n          label: 'Delete',\n          onClick: async () => {\n            const endpoint = `http://localhost:3000/resources/delete/${resourceId}`;\n            await axios.put(endpoint);\n            history.push('/resources')\n          }\n        },\n        {\n          label: 'Keep',\n          onClick: () => null\n        }\n      ]\n    });\n  };\n\n  const editResource = (e, resource) => {\n    setEditFormActive({\n      isActive: true,\n      resourceId: resource.id\n    });\n  };\n\n  useEffect(() => {\n    fetchResourcesData(props.match.params.resource_id).then(data => {\n    setResources(data)\n    setResourcesFetched(true);\n  })\n  }, [props.match.params.resource_id]);\n\n  const resourceCardStyles = {\n    maxWidth: \"1000px\",\n    margin: \"20px\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n\n  const BackButton = () => <Link to='/resources' style={{textAlign: 'center', marginBottom: 20}}><Button isColor={'link'} isOutlined>See All Resources</Button></Link>\n\n  return (\n    <ResourceWrapper>\n      {resourcesFetched ? (\n        <BootcampResourceCard\n          title={resources.title}\n          resourceURL={resources.resource_url}\n          cardResource={resources}\n          resourceId={resources.id}\n          datePosted={resources.date_posted}\n          usersId={resources.users_id}\n          firstName={resources.first_name}\n          lastName={resources.last_name}\n          email={resources.email}\n          githubLink={resources.github_url}\n          linkedinLink={resources.linkin_url}\n          descriptionShort={resources.short_description}\n          descriptionFull={resources.full_description}\n          user={user}\n          editResource={editResource}\n          deleteResource={deleteResource}\n          editFormActive={editFormActive}\n          setEditFormActive={setEditFormActive}\n          fetchResourcesData={fetchResourcesData}\n          resourceCardStyles={resourceCardStyles}\n          BackButton={BackButton}\n        />\n      ) : (\n          null\n        )}\n    </ResourceWrapper>\n  );\n};\n\nconst ResourceWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nexport default ResourcePost;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport Axios from \"axios\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {\n  Card,\n  CardHeader,\n  CardHeaderTitle,\n  CardContent,\n  Content,\n  CardFooter,\n  CardFooterItem\n} from \"bloomer\";\n\nimport {\n  Box,\n  Input,\n  Field,\n  Label,\n  Title,\n  Button,\n  TextArea\n} from \"bloomer\";\n\nconst fetchJobsData = async (jobId) => {\n  const endpoint = `http://localhost:3000/posts/jobs/id/${jobId}`;\n  const res = await Axios.get(endpoint);\n  const data = res.data\n  return data\n};\n\nconst JobPost = props => {\n  const user = useSelector(state => state.user);\n\n  const [isEditMode, setEditMode] = useState(false);\n  const [jobs, setJobs] = useState([]);\n  let history = useHistory();\n\n  const [editJobState, setEditJobState] = useState({\n    job_title: \"\",\n    description: \"\",\n    experience: \"\",\n    email: \"\",\n    phone: \"\",\n    isSubmitted: false\n  });\n\n  \n\n  useEffect(() => {\n    fetchJobsData(props.match.params.job_id).then(data => setJobs(data));\n  }, [props.match.params.job_id]);\n\n  const postApplication = async () => {\n    const endpoint = \"http://localhost:3000/job-applications/add-application/\";\n    const payload = {\n      users_id: user.id,\n      posts_jobs_id: jobs.id\n    };\n    Axios.post(endpoint, payload)\n      .then(res => {\n        alert(\"Your application was received.\");\n      })\n      .catch(err => {\n        alert(\"You have already applied for this job.\");\n      });\n  };\n\n  const handleEditMode = () => {\n    setEditJobState({\n      job_title: jobs.title,\n      description: jobs.description,\n      experience: jobs.experience,\n      email: jobs.email,\n      phone: jobs.phone\n    });\n    setEditMode(true);\n  };\n\n  // prevents the use of writing several handleChange functions by deconstructing name and value from the onchange event\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setEditJobState({ ...editJobState, [name]: value });\n  };\n\n  const handleEditSubmit = async e => {\n    e.preventDefault();\n    const endpoint = `http://localhost:3000/posts/jobs/update/${props.match.params.job_id}`;\n\n    const payload = {\n      title: editJobState.job_title,\n      content: editJobState.description,\n      experience: editJobState.experience,\n      contact_email: editJobState.email,\n      contact_phone: editJobState.phone\n    };\n\n    await Axios.put(endpoint, payload);\n    alert(\"Edit Successful!\");\n    setEditMode(false);\n    fetchJobsData()\n    history.push(`/jobs/${props.match.params.job_id}`);\n  };\n\n  const handleRemoveJob = async e => {\n    e.preventDefault()\n    confirmAlert({\n      title: 'Are you sure?',\n      message: 'You will not be able to recover this job posting once it has been removed.',\n      buttons: [\n        {\n          label: 'Delete',\n          onClick: async () => {\n            const endpoint = `http://localhost:3000/posts/jobs/delete/${props.match.params.job_id}`\n            await Axios.put(endpoint);\n            history.push(`/jobs`)\n          }\n        },\n        {\n          label: 'Keep',\n          onClick: () => null\n        }\n      ]\n    });\n  };\n\n  const handleReportClick = () =>{\n    history.replace(`/report/job/${jobs.id}/${jobs.companies_id}/${jobs.users_id}`)\n  }\n\n\n\n  return (\n    <>\n      {isEditMode ? (\n        <Box style={{margin: \"32px\"}}>\n          <Title style={{textAlign: \"center\"}}>Edit Your Post</Title>\n        <form onSubmit={handleEditSubmit} style={{padding: \"32px\"}}>\n          <Field>\n\n          <Label>\n            Job Title\n            <Input\n              type=\"text\"\n              placeholder=\"Job Title\"\n              name=\"job_title\"\n              value={editJobState.job_title}\n              onChange={handleChange}\n              />\n          </Label>\n              </Field>\n              <Field>\n\n          <Label>\n            Job Description\n            <TextArea\n              placeholder=\"Job Description Information\"\n              name=\"description\"\n              value={editJobState.description}\n              onChange={handleChange}\n              />\n          </Label>\n              </Field>\n              <Field>\n\n          <Label>\n            Experience Desired\n            <TextArea\n              placeholder=\"What skills are you looking for?\"\n              name=\"experience\"\n              value={editJobState.experience}\n              onChange={handleChange}\n              />\n          </Label>\n              </Field>\n              <Field>\n\n          <Label>\n            Contact Email\n            <Input\n              type=\"email\"\n              placeholder=\"Contact Email\"\n              name=\"email\"\n              value={editJobState.email}\n              onChange={handleChange}\n              />\n          </Label>\n              </Field>\n              <Field>\n\n          <Label>\n            Contact Phone Number\n            <Input\n              type=\"tel\"\n              placeholder=\"Phone Number\"\n              name=\"phone\"\n              value={editJobState.phone}\n              onChange={handleChange}\n              />\n          </Label>\n              </Field>\n          <Button style={{margin: \"8px\"}} isColor=\"primary\" type=\"submit\">Edit Job Post</Button>\n          <Button style={{margin: \"8px\"}} isColor=\"danger\" onClick={handleRemoveJob}>Remove Job Post</Button>\n        </form>\n              </Box>\n      ) : (\n          <CardFooterItem>\n            <Card style={{ maxWidth: \"60vw\", margin: \"20px\" }}>\n              <CardHeader>\n                <CardHeaderTitle>{jobs.title}</CardHeaderTitle>\n              </CardHeader>\n              <CardContent>\n                <Content>\n                  <strong>Company Name: </strong>\n                  <Link to={`/company/${jobs.companies_id}`}>{jobs.name}</Link>\n                </Content>\n                <Content>\n                  <strong>Date Posted: </strong>\n                  <Moment format=\"YYYY-MM-DD\">{jobs.date_posted}</Moment>\n                </Content>\n                <Content>\n                  <strong>Job Description: </strong>\n                  {jobs.content}\n                </Content>\n                <Content>\n                  <strong>Experience:</strong> {jobs.experience}\n                </Content>\n                <Content>\n                  <strong>Contact Email: </strong>\n                  {jobs.contact_email}\n                </Content>\n                <Content>\n        \n                  <Button isColor=\"danger\" onClick={handleReportClick}>Report this job posting</Button>\n                </Content>\n              </CardContent>\n              <CardFooter>\n                <CardFooterItem>\n                  {/* If it's a bootcamp user viewing the job, give them ability to apply. If it's a user representing the company that posted the job, give them the option to apply. */}\n                  {user.user_types_id === 2 ? (\n                    <Button onClick={postApplication}>Apply!</Button>\n                  ) : user.companies_id === jobs.companies_id ? (\n                    <Button onClick={handleEditMode}>Edit Post</Button>\n                  ) : (\n                        <></>\n                      )}\n                </CardFooterItem>\n              </CardFooter>\n            </Card>\n          </CardFooterItem>\n        )}\n    </>\n  );\n};\n\n\nexport default JobPost;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Input, Label, Title, Button, TextArea } from \"bloomer\";\nimport axios from \"axios\";\n\nconst CreateJobPost = () => {\n  const company = useSelector(state => state.user);\n  let history = useHistory();\n\n  const [state, setState] = useState({\n    job_title: \"\",\n    description: \"\",\n    experience: \"\",\n    email: \"\",\n    phone: \"\",\n    isSubmitted: false\n  });\n\n  // prevents the use of writing several handleChange functions by deconstructing name and value from the onchange event\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const endpoint = \"http://localhost:3000/posts/jobs/add\";\n\n    const payload = {\n      title: state.job_title,\n      content: state.description,\n      experience: state.experience,\n      contact_email: state.email,\n      contact_phone: state.phone,\n      companies_id: company.companies_id,\n      users_id: company.id\n    };\n\n    await axios.post(endpoint, payload);\n    alert(\"Your job was posted!\");\n    setState({ ...state, isSubmitted: true });\n    history.push(\"/jobs\");\n  };\n\n  return (\n    <>\n      {state.isSubmitted ? (\n        <div>\n          <h2> Thank you for your submission {state.contact_name}</h2>\n        </div>\n      ) : (\n        <Box style={{ margin: \"64px\" }}>\n          <Title style={{ textAlign: \"center\" }}>Create a Job Post</Title>\n\n          <form onSubmit={handleSubmit} style={{ padding: \"32px\" }}>\n            <Label>\n              Job Title\n              <Input\n                type=\"text\"\n                placeholder=\"Job Title\"\n                name=\"job_title\"\n                value={state.name}\n                onChange={handleChange}\n              ></Input>\n            </Label>\n            <Label>\n              Job Description\n              <TextArea\n                placeholder=\"Job Description Information\"\n                name=\"description\"\n                value={state.description}\n                onChange={handleChange}\n              />\n            </Label>\n            <Label>\n              Experience Desired\n              <TextArea\n                placeholder=\"What skills are you looking for?\"\n                name=\"experience\"\n                value={state.experience}\n                onChange={handleChange}\n              />\n            </Label>\n            <Label>\n              Contact Email\n              <Input\n                type=\"email\"\n                placeholder=\"Contact Email\"\n                name=\"email\"\n                value={state.email}\n                onChange={handleChange}\n              ></Input>\n            </Label>\n            <Label>\n              Contact Phone Number\n              <Input\n                type=\"tel\"\n                placeholder=\"Phone Number\"\n                name=\"phone\"\n                value={state.phone}\n                onChange={handleChange}\n              ></Input>\n            </Label>\n            <Button isColor=\"primary\" type=\"submit\">\n              Create Job\n            </Button>\n          </form>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default CreateJobPost;\n","import styled from 'styled-components'\n\nexport const Main = styled.div`\n  display: flex;\n`\n\nexport const SideBar = styled.div`\n  width: 300px;\n  overflow-y: scroll;\n  height: 90vh;\n`\n\nexport const Message = styled.div`\n  width: 100%;\n  height: 90vh;\n  overflow-y: scroll;\n`","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport axios from \"axios\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport { Main, Message } from \"../Styles/messageStyles\";\nimport {\n  Box,\n  Panel,\n  PanelBlock,\n  PanelHeading,\n  PanelTab,\n  PanelTabs,\n  Control,\n  Input,\n  Field,\n  Label,\n  Title,\n  TextArea,\n  Button\n} from \"bloomer\";\nconst endpoint = \"http://localhost:3000\";\n\n\nconst getMessages = async (userId) => {\n  const response = await axios.get(`${endpoint}/messages/all/${userId}`);\n  const data = response.data;\n  return data;\n};\n\nconst getSentMessages = async (userId) => {\n  const response = await axios.get(`${endpoint}/messages/sent/${userId}`);\n  const data = response.data;\n  return data;\n};\n\n\nexport default function Messages() {\n  let { user_id } = useParams();\n  const user = useSelector(state => state.user);\n  const [messages, setMessages] = useState([]);\n  const [sentMessages, setSentMessages] = useState([]);\n  const [singleMessage, setMessage] = useState([{ id: \"\" }]);\n  const [showMessage, setShowMessage] = useState(false);\n  const [showSent, setShowSent] = useState(false);\n  const [showInbox, setShowInbox] = useState(true);\n  const [sendMessage, setSendMessage] = useState({\n    subject: \"\",\n    message: \"\",\n    sent_to: \"\",\n    sent_from: \"\",\n    sent_from_companies_id: null\n  });\n\n  const showMessageAndReplyForm = async message_id => {\n    const response = await axios.get(`${endpoint}/messages/one/${message_id}`);\n    const data = response.data;\n    setMessage(data);\n    setShowMessage(true);\n  };\n\n  \n\n  useEffect(() => {\n    getMessages(user.id).then(data => setMessages(data));\n    getSentMessages(user_id).then(data => setSentMessages(data));\n    if (user_id) {\n      showMessageAndReplyForm(user_id);\n    }\n  }, [user.id, user_id]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const send = await axios.post(`${endpoint}/sendmessage`, sendMessage);\n    if (send.status === 200) {\n      alert(\"Message Sent\");\n      setShowMessage(false);\n      getMessages();\n    } else {\n      alert(\"There was a problem sending the message please try again later\");\n    }\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setSendMessage({\n      ...sendMessage,\n      [name]: value,\n      sent_from: singleMessage[0].sent_from,\n      sent_to: user.id,\n      sent_from_companies_id: user.companies_id\n    });\n  };\n\n  const handleClick = id => {\n    setShowMessage(false);\n    showMessageAndReplyForm(id);\n  };\n\n  const handleSentTabClick = () => {\n    setShowSent(true);\n    setShowInbox(false);\n    setShowMessage(false);\n  };\n\n  const handleInboxTabClick = () => {\n    setShowInbox(true);\n    setShowSent(false);\n    setShowMessage(false);\n  };\n\n  const history = useHistory();\n  const postReport = e => {\n    e.preventDefault();\n    history.push(\n      `/report/user/${singleMessage[0].id}/${singleMessage[0].sent_from_companies_id}`\n    );\n  };\n\n  return (\n    <Main>\n      {messages.length === 0 && sentMessages === 0 ? (\n        <h1>No Messages</h1>\n      ) : (\n        <Panel\n          style={{\n            width: \"300px\",\n            height: \"88vh\",\n            overflowY: \"scroll\",\n            overflowX: \"hidden\",\n            position: \"absolute\"\n          }}\n        >\n          <PanelHeading>Messages</PanelHeading>\n          <PanelTabs>\n            <PanelTab isActive={showInbox} onClick={handleInboxTabClick}>\n              Inbox\n            </PanelTab>\n            <PanelTab isActive={showSent} onClick={handleSentTabClick}>\n              Sent\n            </PanelTab>\n          </PanelTabs>\n          {showInbox\n            ? messages.map((message, index) => {\n                return (\n                  <PanelBlock\n                    key={index}\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      backgroundColor:\n                        message.id === singleMessage[0].id\n                          ? \"lightgrey\"\n                          : \"unset\"\n                    }}\n                  >\n                    <ul\n                      key={message.id}\n                      onClick={() => handleClick(message.id)}\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"flex-start\",\n                        marginLeft: \"8px\"\n                      }}\n                    >\n                      <li>\n                        <strong>\n                          From: {message.first_name} {message.last_name}\n                        </strong>\n                      </li>\n                      <li>\n                        <strong>Date Sent:</strong>\n                        <Moment format=\"YYYY-MM-DD\">{message.date_sent}</Moment>\n                      </li>\n                      <li>\n                        <strong>Subject:</strong> {message.subject}\n                      </li>\n                    </ul>\n                  </PanelBlock>\n                );\n              })\n            : \"\"}\n          {showSent ? (\n            <PanelBlock style={{ display: \"flex\", flexDirection: \"column\" }}>\n              {sentMessages.map((message, index) => {\n                return (\n                  <ul\n                    key={message.id}\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      alignItems: \"flex-start\",\n                      marginLeft: \"8px\"\n                    }}\n                  >\n                    <li>\n                      <strong>\n                        To: {message.first_name} {message.last_name}\n                      </strong>\n                    </li>\n                    <li>\n                      <strong>Date Sent:</strong>\n                      <Moment format=\"YYYY-MM-DD\">{message.date_sent}</Moment>\n                    </li>\n                    <li>\n                      <strong>Subject:</strong> {message.subject}\n                    </li>\n                    <hr />\n                  </ul>\n                );\n              })}\n            </PanelBlock>\n          ) : (\n            \"\"\n          )}\n          ;\n        </Panel>\n      )}\n      {showMessage ? (\n        <Message\n          style={{\n            position: \"relative\",\n            left: \"150px\",\n            overflowY: \"scroll\",\n            overflowX: \"hidden\",\n            height: \"90vh\",\n            margin: \"0 auto\",\n            width: \"80vw\",\n            padding: \"32px\"\n          }}\n        >\n          {singleMessage.map((message, index) => {\n            return (\n              <Box key={message.id}>\n                <Title>\n                  {message.first_name} {message.last_name}{\" \"}\n                  <Button isColor=\"danger\" onClick={postReport}>\n                    Report {message.first_name}\n                  </Button>\n                </Title>\n                <p>\n                  Date Sent:\n                  <Moment format=\"YYYY-MM-DD\">{message.date_sent}</Moment>\n                </p>\n                <p>Subject: {message.subject}</p>\n                <Box style={{ padding: \"16px\", margin: \"16px\" }}>\n                  <Title isSize={5}>Message</Title>\n                  {message.message}\n                </Box>\n              </Box>\n            );\n          })}\n          <Box>\n            <Title isSize={4}>Reply to {singleMessage[0].first_name}</Title>\n\n            <form onSubmit={handleSubmit}>\n              <Field>\n                <Label>Send To</Label>\n                <Control>\n                  <Input\n                    type=\"text\"\n                    placeholder={singleMessage[0].first_name}\n                    name=\"receiver\"\n                    aria-label=\"receiver\"\n                    disabled\n                  />\n                </Control>\n              </Field>\n\n              <Field>\n                <Label>Subject</Label>\n                <Control>\n                  <Input\n                    type=\"text\"\n                    onChange={handleChange}\n                    name=\"subject\"\n                    aria-label=\"subject\"\n                  />\n                </Control>\n              </Field>\n\n              <Field>\n                <Label>Message</Label>\n                <Control>\n                  <TextArea\n                    type=\"textarea\"\n                    onChange={handleChange}\n                    name=\"message\"\n                    aria-label=\"message\"\n                  />\n                </Control>\n              </Field>\n\n              <Field isGrouped>\n                <Control>\n                  <Button type=\"submit\" isColor=\"primary\">\n                    Submit\n                  </Button>\n                </Control>\n              </Field>\n            </form>\n          </Box>\n        </Message>\n      ) : (\n        \"\"\n      )}\n    </Main>\n  );\n}\n","import React, {useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport axios from \"axios\";\nimport {useHistory} from 'react-router-dom';\nimport {\n  Box,\n  Input,\n  Field,\n  Label,\n  Title,\n  TextArea,\n  Button\n} from \"bloomer\";\n\nconst BootcampResourcePost = () => {\n  const user = useSelector(state => state.user);\n  let history = useHistory();\n  const [state, setState] = useState({\n    title: \"\",\n    short_description: \"\",\n    full_description: \"\",\n    resource_url: \"http://\",\n    resourceSubmitted: false\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const userId = user.id;\n    const endpoint = `http://localhost:3000/resources/add/${userId}`;\n\n    const payload = {\n      title: state.title,\n      short_description: state.short_description,\n      full_description: state.full_description,\n      resource_url: state.resource_url,\n      userId\n    };\n\n    await axios.post(endpoint, payload);\n    setState({ ...state, resourceSubmitted: true });\n    setTimeout(() => {\n      history.push('/resources')\n    }, 1000)\n  }\n\n  return ( \n    <Box style={{margin: \"32px\"}}>\n    {state.resourceSubmitted ? (\n      <Box>\n        <Title>Thank you for submitting a resource!</Title>\n      </Box>\n    ) : (\n      <form onSubmit={handleSubmit}>\n      <Title style={{textAlign: \"center\"}}>Submit Your Resource</Title>\n        <Field>\n\n        <Label>\n          Resource Title\n          <Input\n            type=\"text\"\n            placeholder=\"Resource Title\"\n            name=\"title\"\n            value={state.title}\n            onChange={handleChange}\n            ></Input>\n        </Label>\n            </Field>\n            <Field>\n\n        <Label>\n          Resource Description (short)\n          <TextArea\n            rows=\"5\"\n            cols=\"33\"\n            placeholder=\"Short description of resource\"\n            name=\"short_description\"\n            value={state.short_description}\n            onChange={handleChange}\n            />\n        </Label>\n            </Field>\n            <Field>\n\n        <Label>\n          Resource Description (full)\n          <TextArea\n            rows=\"5\"\n            cols=\"33\"\n            placeholder=\"Full description of resource\"\n            name=\"full_description\"\n            value={state.full_description}\n            onChange={handleChange}\n            />\n        </Label>\n            </Field>\n            <Field>\n\n        <Label>\n          Resource Link (URL)\n          <Input\n            type=\"url\"\n            placeholder=\"Link to resource\"\n            name=\"resource_url\"\n            value={state.resource_url}\n            onChange={handleChange}\n            ></Input>\n        </Label>\n            </Field>\n        <Button isColor=\"primary\" type=\"submit\">Submit Resource</Button>\n      </form>\n    )}\n    </Box>\n  );\n}\n \nexport default BootcampResourcePost;","import axios from 'axios'\n\nconst ENDPOINT = `http://localhost:3000`;\n\n\nexport const getReports = async () => {\n  const response = await axios.get(`${ENDPOINT}/reports`);\n  const data = response.data;\n  console.log(\"THIS\", data)\n  return data\n};\n\nexport const getUsersReports = async () => {\n  const response = await axios.get(`${ENDPOINT}/reports/all/users`);\n  const data = response.data;\n  if (response.status === 200) {\n    return data\n  } else {\n    alert(\"Sorry, there was an error\");\n  }\n};\n\nexport const getCompaniesReports = async () => {\n  const response = await axios.get(`${ENDPOINT}/reports/all/companies`);\n  const data = response.data;\n  if (response.status === 200) {\n    return data\n  } else {\n    alert(\"Sorry, there was an error\");\n  }\n};\n\nexport const getJobsReports = async () => {\n  const response = await axios.get(`${ENDPOINT}/reports/all/jobs`);\n  const data = response.data;\n  if (response.status === 200) {\n    return data\n  } else {\n    alert(\"Sorry, there was an error\");\n  }\n};\n\nexport const getResourcesReports = async () => {\n  const response = await axios.get(`${ENDPOINT}/reports/all/resources`);\n  const data = response.data;\n  if (response.status === 200) {\n    return data\n  } else {\n    alert(\"Sorry, there was an error\");\n  }\n};\n\n// Resolved reports\nexport const getResolvedReports = async () => {\n  const response = await axios.get(`${ENDPOINT}/reports/resolved`);\n  const data = response.data;\n  if (response.status === 200) {\n    return data\n  } else {\n    alert(\"Sorry, there was an error\");\n  }\n};\n\nexport const getUsersResolvedReports = async () => {\n  const response = await axios.get(`${ENDPOINT}/reports/all/resolved/users`);\n  const data = response.data;\n  if (response.status === 200) {\n    return data\n  } else {\n    alert(\"Sorry, there was an error\");\n  }\n};\n\nexport const getCompaniesResolvedReports = async () => {\n  const response = await axios.get(\n    `${ENDPOINT}/reports/all/resolved/companies`\n  );\n  const data = response.data;\n  if (response.status === 200) {\n    return data\n  } else {\n    alert(\"Sorry, there was an error\");\n  }\n};\n\nexport const getJobsResolvedReports = async () => {\n  const response = await axios.get(`${ENDPOINT}/reports/all/resolved/jobs`);\n  const data = response.data;\n  if (response.status === 200) {\n    return data\n  } else {\n    alert(\"Sorry, there was an error\");\n  }\n};\n\nexport const getResourcesResolvedReports = async () => {\n  const response = await axios.get(\n    `${ENDPOINT}/reports/all/resolved/resources`\n  );\n  const data = response.data;\n  if (response.status === 200) {\n    return data\n  } else {\n    alert(\"Sorry, there was an error\");\n  }\n};\n\n// useEffect(() => {\n//   getReports().then(reports => setAllReports(reports));\n// }, []);\n\n// useEffect(() => {\n//   getUsersReports().then(reports =>\n//   setUsers(reports))\n// }, []);\n\n// useEffect(() => {\n//   getCompaniesReports().then(reports =>\n//   setCompanies(reports))\n// }, []);\n\n// useEffect(() => {\n//   getJobsReports().then(reports =>\n//   setJobs(reports))\n// }, []);\n\n// useEffect(() => {\n//   getResourcesReports().then(reports =>\n//   setResources(reports))\n// }, []);\n\n// useEffect(() => {\n//   getResolvedReports().then(reports =>\n//   setAllResolvedReports(reports))\n// }, []);\n\n// useEffect(() => {\n//   getUsersResolvedReports().then(reports =>\n//   setUsersResolved(reports))\n// }, []);\n\n// useEffect(() => {\n//   getCompaniesResolvedReports().then(reports =>\n//   setCompaniesResolved(reports))\n// }, []);\n\n// useEffect(() => {\n//   getJobsResolvedReports().then(reports =>\n//   setJobsResolved(reports))\n// }, []);\n\n// useEffect(() => {\n//   getResourcesResolvedReports().then(reports =>\n//   setResourcesResolved(reports))\n// }, []);\n\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Panel,\n  PanelBlock,\n  PanelHeading,\n  PanelTab,\n  PanelTabs,\n  Control,\n  Input,\n  Select,\n  Box,\n  Field,\n  Label,\n  Title,\n  TextArea,\n  Button\n} from \"bloomer\";\n\nimport {\n  getReports,\n  getUsersReports,\n  getCompaniesReports,\n  getJobsReports,\n  getResourcesReports,\n  getResolvedReports,\n  getUsersResolvedReports,\n  getCompaniesResolvedReports,\n  getJobsResolvedReports,\n  getResourcesResolvedReports\n} from \"./reportFunctions\";\n\n//   deleteJob,\n//   deleteResource,\n\nexport default function Reports() {\n  const history = useHistory();\n  const user = useSelector(state => state.user);\n\n  if (user.user_types_id !== 1) {\n    window.location.replace(\"/\");\n  }\n\n  // report types\n  const [allReports, setAllReports] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [resources, setResources] = useState([]);\n  // resolved types\n  const [allResolvedReports, setAllResolvedReports] = useState([]);\n  const [usersResolved, setUsersResolved] = useState([]);\n  const [companiesResolved, setCompaniesResolved] = useState([]);\n  const [jobsResolved, setJobsResolved] = useState([]);\n  const [resourcesResolved, setResourcesResolved] = useState([]);\n\n  // single report\n  const [singleReport, setReport] = useState([]);\n  const [sendMessage, setSendMessage] = useState({\n    subject: \"\",\n    message: \"\",\n    sent_from: \"\",\n    sent_to: \"\"\n  });\n\n  const [messageData, setMessageData] = useState({ id: \"\", name: \"\" });\n\n  const [sendCompanyMessage, setSendCompanyMessage] = useState({\n    subject: \"\",\n    message: \"\",\n    sent_from: \"\",\n    companies_id: \"\"\n  });\n  // conditional rendering states\n  const [showResolved, setShowResolved] = useState(false);\n  const [showUnResolved, setShowUnResolved] = useState(true);\n  const [showAll, setShowAll] = useState(true);\n  const [showUserReports, setShowUserReports] = useState(false);\n  const [showCompanyReports, setShowCompanyReports] = useState(false);\n  const [showJobReports, setShowJobReports] = useState(false);\n  const [showResourceReports, setShowResourceReports] = useState(false);\n  const [showReport, setShowReport] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [showCompanyMessage, setShowCompanyMessage] = useState(false);\n\n  const handleResolveTabClick = () => {\n    setShowResolved(true);\n    setShowUnResolved(false);\n  };\n\n  const handleUnresolvedTabClick = () => {\n    setShowUnResolved(true);\n    setShowResolved(false);\n  };\n\n  const changeStatus = status => {\n    let show = status;\n    setShowAll(show[0]);\n    setShowUserReports(show[1]);\n    setShowCompanyReports(show[2]);\n    setShowJobReports(show[3]);\n    setShowResourceReports(show[4]);\n  };\n\n  const handleSelectChange = e => {\n    const selection = e.target.value;\n    switch (selection) {\n      case \"all\":\n        return changeStatus([true, false, false, false, false]);\n      case \"user\":\n        return changeStatus([false, true, false, false, false]);\n      case \"company\":\n        return changeStatus([false, false, true, false, false]);\n      case \"job\":\n        return changeStatus([false, false, false, true, false]);\n      case \"resource\":\n        return changeStatus([false, false, false, false, true]);\n      default:\n        return \"Make a selection\";\n    }\n  };\n\n  const ENDPOINT = `http://localhost:3000`;\n\n  useEffect(() => {\n    getReports().then(reports => setAllReports(reports));\n  }, []);\n\n  useEffect(() => {\n    getUsersReports().then(reports => setUsers(reports));\n  }, []);\n\n  useEffect(() => {\n    getCompaniesReports().then(reports => setCompanies(reports));\n  }, []);\n\n  useEffect(() => {\n    getJobsReports().then(reports => setJobs(reports));\n  }, []);\n\n  useEffect(() => {\n    getResourcesReports().then(reports => setResources(reports));\n  }, []);\n\n  useEffect(() => {\n    getResolvedReports().then(reports => setAllResolvedReports(reports));\n  }, []);\n\n  useEffect(() => {\n    getUsersResolvedReports().then(reports => setUsersResolved(reports));\n  }, []);\n\n  useEffect(() => {\n    getCompaniesResolvedReports().then(reports =>\n      setCompaniesResolved(reports)\n    );\n  }, []);\n\n  useEffect(() => {\n    getJobsResolvedReports().then(reports => setJobsResolved(reports));\n  }, []);\n\n  useEffect(() => {\n    getResourcesResolvedReports().then(reports =>\n      setResourcesResolved(reports)\n    );\n  }, []);\n\n  const getTheReport = async id => {\n    const response = await axios.get(`${ENDPOINT}/report/${id}`);\n    const data = response.data;\n    if (response.status === 200) {\n      setReport(data);\n    } else {\n      alert(\"Sorry, there was an error\");\n    }\n  };\n\n  const handleReportClick = id => {\n    setShowReport(true);\n    getTheReport(id);\n    setShowMessage(false);\n  };\n\n  const handleViewProfileClick = id => {\n    history.push(`/user/${id}`);\n  };\n\n  const handleViewCompanyProfileClick = id => {\n    history.push(`/company/${id}`);\n  };\n\n  const handleViewJobPostClick = id => {\n    history.push(`/jobs/${id}`);\n  };\n\n  const handleViewResourcePostClick = id => {\n    history.push(`/resources/${id}`);\n  };\n\n  const handleBanUserClick = async id => {\n    const response = await axios.put(`${ENDPOINT}/reports/auth/user/${id}`);\n    console.log(response);\n    if (response.status === 200) {\n      alert(\"User Authorization revoked\");\n    } else {\n      alert(\"Sorry There was an error updating authorization\");\n    }\n  };\n\n  const handleResolveClick = async id => {\n    const response = await axios.post(`${ENDPOINT}/reports/resolve/${id}`);\n    if (response.status === 200) {\n      alert(\"Report Resolved\");\n      setReport(false);\n      setShowResolved(false);\n      setShowUnResolved(false);\n      getReports().then(reports => setAllReports(reports))\n      getUsersReports().then(reports => setUsers(reports));\n      getCompaniesReports().then(reports => setCompanies(reports));\n      getJobsReports().then(reports => setJobs(reports));\n      getResourcesReports().then(reports => setResources(reports));\n      getResolvedReports().then(reports => setAllResolvedReports(reports));\n      getUsersResolvedReports().then(reports => setUsersResolved(reports));\n      getCompaniesResolvedReports().then(reports =>\n        setCompaniesResolved(reports)\n      );\n      getJobsResolvedReports().then(reports => setJobsResolved(reports));\n      getResourcesResolvedReports().then(reports =>\n        setResourcesResolved(reports)\n      );\n      setShowUnResolved(true);\n    } else {\n      alert(\"Sorry, There was an Error resolving report\");\n    }\n  };\n\n  const handleMessageSubmit = async e => {\n    e.preventDefault();\n    const endpoint = \"http://localhost:3000\";\n    const send = await axios.post(`${endpoint}/sendmessage`, sendMessage);\n    if (send.status === 200) {\n      alert(\"Message Sent\");\n      setShowMessage(false);\n    } else {\n      alert(\"There was a problem sending the message please try again later\");\n    }\n  };\n\n  const handleCompanyMessageSubmit = async e => {\n    e.preventDefault();\n    const endpoint = \"http://localhost:3000\";\n    const send = await axios.post(\n      `${endpoint}/reports/send/company`,\n      sendCompanyMessage\n    );\n    if (send.status === 200) {\n      alert(\"Message Sent\");\n      setShowCompanyMessage(false);\n    } else {\n      alert(\"There was a problem sending the message please try again later\");\n    }\n  };\n\n  const handleUserMessageForm = id => {\n    setShowMessage(true);\n    setShowReport(false);\n    setMessageData({ ...messageData, id: id });\n  };\n\n  const handleCompanyMessageForm = id => {\n    setShowCompanyMessage(true);\n    setShowReport(false);\n  };\n\n  const handleMessageChange = e => {\n    const { name, value } = e.target;\n    setSendMessage({\n      ...sendMessage,\n      [name]: value,\n      sent_from: user.id,\n      sent_to: messageData.id\n    });\n  };\n  const handleCompanyMessageChange = e => {\n    const { name, value } = e.target;\n    setSendCompanyMessage({\n      ...sendCompanyMessage,\n      [name]: value,\n      sent_from: user.id,\n      companies_id: singleReport.companies_id\n    });\n  };\n\n  const handleCompanyBanClick = async e => {\n    const response = await axios.put(\n      `${ENDPOINT}/reports/auth/company/${singleReport.companies_id}`\n    );\n    if (response.status === 200) {\n      alert(\"Company Ban Successful\");\n    } else {\n      alert(\"Sorry there was an error with the ban\");\n    }\n  };\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <Panel\n        style={{\n          width: \"300px\",\n          height: \"88vh\",\n          overflowY: \"scroll\",\n          overflowX: \"hidden\"\n        }}\n      >\n        <PanelHeading>Reports</PanelHeading>\n        <PanelBlock>\n          <Control hasIcons=\"left\">\n            <Select onChange={handleSelectChange}>\n              <option defaultValue value=\"all\">\n                All Reports\n              </option>\n              <option value=\"user\">User Reports</option>\n              <option value=\"company\">Company Reports</option>\n              <option value=\"job\">Job Reports</option>\n              <option value=\"resource\">Resource Reports</option>\n            </Select>\n          </Control>\n        </PanelBlock>\n        <PanelTabs>\n          <PanelTab\n            isActive={showUnResolved}\n            onClick={handleUnresolvedTabClick}\n          >\n            Unresolved\n          </PanelTab>\n          <PanelTab isActive={showResolved} onClick={handleResolveTabClick}>\n            Resolved\n          </PanelTab>\n        </PanelTabs>\n\n        {showUnResolved ? (\n          showAll ? (\n            allReports.map(report => {\n              return (\n                <PanelBlock\n                  onClick={() => handleReportClick(report.id)}\n                  style={{\n                    backgroundColor:\n                      report.id === singleReport.id ? \"lightgrey\" : \"unset\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\"\n                  }}\n                >\n                  <h4>Report# {report.id}</h4>\n                  <h6>\n                    Date Reported:{\" \"}\n                    <Moment format=\"YYYY-MM-DD\">{report.date_reported}</Moment>\n                  </h6>\n                  {/* <h5>\n                    Reported By: {report.first_name} {report.last_name}\n                  </h5> */}\n                </PanelBlock>\n              );\n            })\n          ) : showUserReports ? (\n            users.map(report => {\n              return (\n                <PanelBlock\n                  onClick={() => handleReportClick(report.id)}\n                  style={{\n                    backgroundColor:\n                      report.id === singleReport.id ? \"lightgrey\" : \"unset\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\"\n                  }}\n                >\n                  <h4>Report# {report.id}</h4>\n                  <h6>\n                    Date Reported:{\" \"}\n                    <Moment format=\"YYYY-MM-DD\">{report.date_reported}</Moment>\n                  </h6>\n                  {/* <h5>\n                    Reported By: {report.first_name} {report.last_name}\n                  </h5> */}\n                </PanelBlock>\n              );\n            })\n          ) : showCompanyReports ? (\n            companies.map(report => {\n              return (\n                <PanelBlock\n                  onClick={() => handleReportClick(report.id)}\n                  style={{\n                    backgroundColor:\n                      report.id === singleReport.id ? \"lightgrey\" : \"unset\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\"\n                  }}\n                >\n                  <h4>Report# {report.id}</h4>\n                  <h6>\n                    Date Reported:{\" \"}\n                    <Moment format=\"YYYY-MM-DD\">{report.date_reported}</Moment>\n                  </h6>\n                  {/* <h5>\n                    Reported By: {report.first_name} {report.last_name}\n                  </h5> */}\n                </PanelBlock>\n              );\n            })\n          ) : showJobReports ? (\n            jobs.map(report => {\n              return (\n                <PanelBlock\n                  onClick={() => handleReportClick(report.id)}\n                  style={{\n                    backgroundColor:\n                      report.id === singleReport.id ? \"lightgrey\" : \"unset\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\"\n                  }}\n                >\n                  <h4>Report# {report.id}</h4>\n                  <h6>\n                    Date Reported:{\" \"}\n                    <Moment format=\"YYYY-MM-DD\">{report.date_reported}</Moment>\n                  </h6>\n                  {/* <h5>\n                    Reported By: {report.first_name} {report.last_name}\n                  </h5> */}\n                </PanelBlock>\n              );\n            })\n          ) : showResourceReports ? (\n            resources.map(report => {\n              return (\n                <PanelBlock\n                  onClick={() => handleReportClick(report.id)}\n                  style={{\n                    backgroundColor:\n                      report.id === singleReport.id ? \"lightgrey\" : \"unset\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\"\n                  }}\n                >\n                  <h4>Report# {report.id}</h4>\n                  <h6>\n                    Date Reported:{\" \"}\n                    <Moment format=\"YYYY-MM-DD\">{report.date_reported}</Moment>\n                  </h6>\n                  {/* <h5>\n                    Reported By: {report.first_name} {report.last_name}\n                  </h5> */}\n                </PanelBlock>\n              );\n            })\n          ) : (\n            <></>\n          )\n        ) : (\n          <></>\n        )}\n\n        {showResolved ? (\n          showAll ? (\n            allResolvedReports.map(report => {\n              return (\n                <PanelBlock\n                  onClick={() => handleReportClick(report.id)}\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\"\n                  }}\n                >\n                  <h4>Report# {report.id}</h4>\n                  <h6>\n                    Date Reported:{\" \"}\n                    <Moment format=\"YYYY-MM-DD\">{report.date_reported}</Moment>\n                  </h6>\n                  {/* <h5>\n                    Reported By: {report.first_name} {report.last_name}\n                  </h5> */}\n                </PanelBlock>\n              );\n            })\n          ) : showUserReports ? (\n            usersResolved.map(report => {\n              return (\n                <PanelBlock\n                  onClick={() => handleReportClick(report.id)}\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\"\n                  }}\n                >\n                  <h4>Report# {report.id}</h4>\n                  <h6>\n                    Date Reported:{\" \"}\n                    <Moment format=\"YYYY-MM-DD\">{report.date_reported}</Moment>\n                  </h6>\n                  {/* <h5>\n                    Reported By: {report.first_name} {report.last_name}\n                  </h5> */}\n                </PanelBlock>\n              );\n            })\n          ) : showCompanyReports ? (\n            companiesResolved.map(report => {\n              return (\n                <PanelBlock\n                  onClick={() => handleReportClick(report.id)}\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\"\n                  }}\n                >\n                  <h4>Report# {report.id}</h4>\n                  <h6>\n                    Date Reported:{\" \"}\n                    <Moment format=\"YYYY-MM-DD\">{report.date_reported}</Moment>\n                  </h6>\n                  {/* <h5>\n                    {/* Reported By: {report.first_name} {report.last_name} */}\n                  {/* </h5>  */}\n                </PanelBlock>\n              );\n            })\n          ) : showJobReports ? (\n            jobsResolved.map(report => {\n              return (\n                <PanelBlock\n                  onClick={() => handleReportClick(report.id)}\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\"\n                  }}\n                >\n                  <h4>Report# {report.id}</h4>\n                  <h6>\n                    Date Reported:{\" \"}\n                    <Moment format=\"YYYY-MM-DD\">{report.date_reported}</Moment>\n                  </h6>\n                  {/* <h5>\n                    Reported By: {report.first_name} {report.last_name}\n                  </h5> */}\n                </PanelBlock>\n              );\n            })\n          ) : showResourceReports ? (\n            resourcesResolved.map(report => {\n              return (\n                <PanelBlock\n                  onClick={() => handleReportClick(report.id)}\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\"\n                  }}\n                >\n                  <h4>Report# {report.id}</h4>\n                  <h6>\n                    Date Reported:{\" \"}\n                    <Moment format=\"YYYY-MM-DD\">{report.date_reported}</Moment>\n                  </h6>\n                  {/* <h5>\n                    Reported By: {report.first_name} {report.last_name}\n                  </h5> */}\n                </PanelBlock>\n              );\n            })\n          ) : (\n            <></>\n          )\n        ) : (\n          <></>\n        )}\n      </Panel>\n      {showReport ? (\n        <Box style={{ width: \"80%\", margin: \"0 auto\" }}>\n          <Box>\n            <h1>Report # {singleReport.id}</h1>\n            {singleReport.companies_id === null &&\n            singleReport.posts_jobs_id === null ? (\n              <h2>\n                {\" \"}\n                Offender:{\" \"}\n                {singleReport.first_name + \" \" + singleReport.last_name}\n                <span style={{ fontWeight: \"900\" }}>\n                  {!singleReport.auth ? \"User Banned\" : \"\"}\n                </span>\n              </h2>\n            ) : singleReport.posts_jobs_id === null ? (\n              <>Offending Company: {singleReport.name}</>\n            ) : (\n              <>\n                <h2>Offending Company: {singleReport.name}</h2>\n                <h2>\n                  Company User:{\" \"}\n                  {singleReport.first_name + \" \" + singleReport.last_name}\n                  <span style={{ fontWeight: \"900\" }}>\n                    {!singleReport.auth ? \"User Banned\" : \"\"}\n                  </span>\n                </h2>\n                <h2>Job Post: {singleReport.jobtitle}</h2>\n              </>\n            )}\n            <h1>\n              Status: {singleReport.resolved ? \"Resolved\" : \"Not Resolved\"}\n            </h1>\n            <Box style={{ margin: \"32px\" }}>Reason: {singleReport.reason}</Box>\n          </Box>\n          {!singleReport.resolved ? (\n            <Box style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n              <Button\n                onClick={() => handleResolveClick(singleReport.id)}\n                style={{ margin: \"16px\" }}\n              >\n                Resolve\n              </Button>\n              {singleReport.users_id ? (\n                <>\n                  <Button\n                    onClick={() =>\n                      handleViewProfileClick(singleReport.users_id)\n                    }\n                    style={{ margin: \"16px\" }}\n                  >\n                    View Offender Profile\n                  </Button>\n                  <Button\n                    onClick={() => handleUserMessageForm(singleReport.users_id)}\n                    style={{ margin: \"16px\" }}\n                  >\n                    Message Offender\n                  </Button>\n                  <Button\n                    onClick={() => handleBanUserClick(singleReport.users_id)}\n                    style={{ margin: \"16px\" }}\n                  >\n                    Ban User\n                  </Button>\n                </>\n              ) : (\n                <></>\n              )}\n              <Button\n                onClick={() => handleUserMessageForm(singleReport.submited_by)}\n                style={{ margin: \"16px\" }}\n              >\n                Message Report Submitter\n              </Button>\n              {singleReport.companies_id !== null ? (\n                <>\n                  <Button\n                    onClick={() =>\n                      handleViewCompanyProfileClick(singleReport.companies_id)\n                    }\n                    style={{ margin: \"16px\" }}\n                  >\n                    View Company Profile\n                  </Button>\n                  <Button\n                    onClick={() =>\n                      handleCompanyMessageForm(singleReport.users_id)\n                    }\n                    style={{ margin: \"16px\" }}\n                  >\n                    Message Company\n                  </Button>\n                  <Button\n                    onClick={handleCompanyBanClick}\n                    style={{ margin: \"16px\" }}\n                  >\n                    Ban Company\n                  </Button>\n                </>\n              ) : (\n                \"\"\n              )}\n              {singleReport.posts_jobs_id !== null ? (\n                <Button\n                  onClick={() =>\n                    handleViewJobPostClick(singleReport.posts_jobs_id)\n                  }\n                  style={{ margin: \"16px\" }}\n                >\n                  View Job Post\n                </Button>\n              ) : (\n                \"\"\n              )}\n              {singleReport.resource_id !== null ? (\n                <Button\n                  onClick={() =>\n                    handleViewResourcePostClick(singleReport.resource_id)\n                  }\n                  style={{ margin: \"16px\" }}\n                >\n                  {\" \"}\n                  Resource Post{\" \"}\n                </Button>\n              ) : (\n                \"\"\n              )}\n            </Box>\n          ) : (\n            \"\"\n          )}\n        </Box>\n      ) : (\n        \" \"\n      )}\n      {showMessage ? (\n        <Box\n          style={{ display: \"flex\", flexDirection: \"column\", margin: \"0 auto\" }}\n        >\n          <Title isSize={4}>Send Message</Title>\n          <form onSubmit={handleMessageSubmit}>\n            {/* <Field>\n          <Label>Send To</Label>\n          <Control>\n            <Input\n              type=\"text\"\n              name=\"receiver\"\n              aria-label=\"receiver\"\n              disabled\n            />\n          </Control>\n        </Field> */}\n\n            <Field>\n              <Label>Subject</Label>\n              <Control>\n                <Input\n                  type=\"text\"\n                  onChange={handleMessageChange}\n                  name=\"subject\"\n                  aria-label=\"subject\"\n                />\n              </Control>\n            </Field>\n\n            <Field>\n              <Label>Message</Label>\n              <Control>\n                <TextArea\n                  type=\"textarea\"\n                  onChange={handleMessageChange}\n                  name=\"message\"\n                  aria-label=\"message\"\n                />\n              </Control>\n            </Field>\n\n            <Field isGrouped>\n              <Control>\n                <Button type=\"submit\" isColor=\"primary\">\n                  Submit\n                </Button>\n              </Control>\n            </Field>\n          </form>\n        </Box>\n      ) : (\n        \"\"\n      )}\n      {showCompanyMessage ? (\n        <Box\n          style={{ display: \"flex\", flexDirection: \"column\", margin: \"0 auto\" }}\n        >\n          <Title isSize={4}>Send Message to {singleReport.name}</Title>\n          <form onSubmit={handleCompanyMessageSubmit}>\n            <Field>\n              <Label>Send To</Label>\n              <Control>\n                <Input\n                  type=\"text\"\n                  placeholder={singleReport.name}\n                  name=\"receiver\"\n                  aria-label=\"receiver\"\n                  disabled\n                />\n              </Control>\n            </Field>\n\n            <Field>\n              <Label>Subject</Label>\n              <Control>\n                <Input\n                  type=\"text\"\n                  onChange={handleCompanyMessageChange}\n                  name=\"subject\"\n                  aria-label=\"subject\"\n                />\n              </Control>\n            </Field>\n\n            <Field>\n              <Label>Message</Label>\n              <Control>\n                <TextArea\n                  type=\"textarea\"\n                  onChange={handleCompanyMessageChange}\n                  name=\"message\"\n                  aria-label=\"message\"\n                />\n              </Control>\n            </Field>\n\n            <Field isGrouped>\n              <Control>\n                <Button type=\"submit\" isColor=\"primary\">\n                  Submit\n                </Button>\n              </Control>\n            </Field>\n          </form>\n        </Box>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Box,\n  Field,\n  Label,\n  Title,\n  Button,\n  TextArea\n} from \"bloomer\";\n\nexport default function PostReports() {\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n  let { user_id, posts_job_id, companies_id, resource_id } = useParams();\n  // change string to null\n  if (user_id === \"null\") {\n    user_id = null;\n  }\n  if (posts_job_id === \"null\") {\n    posts_job_id = null;\n  }\n  if (companies_id === \"null\") {\n    companies_id = null;\n  }\n  if (resource_id === \"null\") {\n    resource_id = null;\n  }\n\n  const [sendMessage, setSendMessage] = useState({\n    users_id: user_id,\n    posts_job_id: posts_job_id,\n    companies_id: companies_id,\n    resource_id: resource_id,\n    reason: \"\",\n    submited_by: user.id\n  });\n\n  const endpoint = \"http://localhost:3000\";\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const send = await axios.post(`${endpoint}/reports/newreport`, sendMessage);\n    console.log(send);\n    if (send.status === 200) {\n      alert(\"Message Sent\");\n      history.push(\"/home\");\n    } else {\n      alert(\"There was a problem sending the message please try again later\");\n    }\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setSendMessage({\n      ...sendMessage,\n      [name]: value,\n      users_id: user_id,\n      posts_job_id: posts_job_id,\n      companies_id: companies_id,\n      resource_id: resource_id,\n      submited_by: user.id\n    });\n  };\n\n  return (\n    <Box style={{ margin: \"128px\" }}>\n      <Title style={{ textAlign: \"center\" }}>Report</Title>\n      <form onSubmit={handleSubmit} style={{ padding: \"32px\" }}>\n        <Field>\n          <Label>\n            Sending To:\n            <input\n              type=\"text\"\n              placeholder=\"ADMIN\"\n              name=\"receiver\"\n              aria-label=\"receiver\"\n              disabled\n            />\n          </Label>\n        </Field>\n        <Field>\n          <Label>\n            Reason:\n            <TextArea\n              type=\"text\"\n              onChange={handleChange}\n              name=\"reason\"\n              aria-label=\"reason\"\n            />\n          </Label>\n        </Field>\n\n        <Button isColor=\"primary\" type=\"submit\">\n          Send Report\n        </Button>\n      </form>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport NavBar from \"./component/NavBar/NavBar\";\nimport Signup from \"./component/Users/Signup\";\nimport Login from \"./component/Users/Login\";\nimport LandingPage from \"./component/LandingPage\";\nimport Home from \"./component/Home\";\nimport Jobs from \"./component/Jobs\";\nimport BootcampProfile from \"./component/BootcampProfile\";\nimport CompanyProfile from \"./component/CompanyProfile\";\nimport Applications from \"./component/Applications\";\nimport Resources from \"./component/Resources\";\nimport ResourcePost from \"./component/Resources/ResourcePost\";\nimport JobPost from \"./component/Jobs/JobPost\";\nimport CreateJobPost from \"./component/Jobs/CreateJobPost\";\nimport \"./App.css\";\nimport Messages from \"./component/messages\";\nimport BootcampResourcePost from \"./component/Resources/BootcampResourcePost\";\nimport AdminReports from \"./component/Home/admin/reports\";\nimport Reports from \"./component/PostReports\";\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <NavBar />\n          <Route path=\"/\" component={LandingPage} exact />\n          <Route path=\"/signup\" component={Signup} exact />\n          <Route path=\"/login\" component={Login} exact />\n          <Route path=\"/home\" component={Home} exact />\n          <Route\n            path=\"/admin/reports/:report_id?\"\n            component={AdminReports}\n            exact\n          />\n          <Route\n            path=\"/report/user/:user_id/:companies_id?\"\n            component={Reports}\n            exact\n          />\n          <Route\n            path=\"/report/company/:companies_id/:user_id?\"\n            component={Reports}\n            exact\n          />\n          <Route\n            path=\"/report/resource/:resource_id/:user_id\"\n            component={Reports}\n            exact\n          />\n          <Route\n            path=\"/report/job/:posts_jobs_id/:companies_id/:user_id?\"\n            component={Reports}\n            exact\n          />\n          <Route path=\"/applications\" component={Applications} exact />\n          <Route path=\"/messages/:user_id?\" component={Messages} exact />\n          <Route path=\"/user/:id\" component={BootcampProfile} exact />\n          <Route path=\"/company/:id\" component={CompanyProfile} exact />\n          <Route path=\"/jobs\" component={Jobs} exact />\n          <Route path=\"/create-job\" component={CreateJobPost} exact />\n          <Route path=\"/jobs/:job_id\" component={JobPost} exact />\n          <Route path=\"/resources\" component={Resources} exact />\n          <Route\n            path=\"/resources/:resource_id\"\n            component={ResourcePost}\n            exact\n          />\n          <Route\n            path=\"/resources/submit\"\n            component={BootcampResourcePost}\n            exact\n          />\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","// no credentials (public user)\nconst developmentType = null;\nconst developmentAuth = null;\nconst developmentid = null;\nconst developmentCid = null;\n\n// admin credentials (nep@gmail)\n// const developmentType = 1;\n// const developmentAuth = true;\n// const developmentid = 13;\n// const developmentCid = null;\n\n// bootcamper credentials (dcapples@gmail.com)\n// const developmentType = 2;\n// const developmentAuth = true;\n// const developmentid = 1;\n// const developmentCid = null;\n\n// company credentials (hmnep@gmail.com)\n// const developmentType = 3;\n// const developmentAuth = true;\n// const developmentid = 1;\n// const developmentCid = 1;\n\nconst initialState = {\n  id: developmentid,\n  email: null,\n  first_name: null,\n  last_name: null,\n  skills: null,\n  linkedin_url: null,\n  auth: developmentAuth,\n  user_types_id: developmentType,\n  bootcamp_name: null,\n  companies_id: developmentCid,\n  profile_pic_url: null\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"user logged in\":\n      return {\n        ...action.payload\n      };\n    case \"user logged out\":\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from 'redux'\nimport userReducer from './loginReducer'\n\nconst rootReducer = combineReducers({\n  user: userReducer\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bulma/css/bulma.css'\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport reduxPromise from 'redux-promise';\nimport reduxThunk from 'redux-thunk';\n\nimport rootReducer from './reducers/rootReducer';\n\nconst middleWare = [reduxPromise, reduxThunk];\n\nexport const theStore = applyMiddleware(...middleWare)(createStore)(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={theStore}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}